/*
Copyright (c) 2023 Americus Maximus

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#include "DX.hxx"

#define VERTEX_SHADER_COLOR_SIZE 4
#define VERTEX_SHADER_FLOAT2_SIZE (2 * 4)
#define VERTEX_SHADER_FLOAT3_SIZE (3 * 4)
#define VERTEX_SHADER_FLOAT4_SIZE (4 * 4)

#define VERTEX_SHADER_STREAM_0_INDEX 0

#define VERTEX_SHADER_USAGE_0_INDEX 0
#define VERTEX_SHADER_USAGE_1_INDEX 1
#define VERTEX_SHADER_USAGE_2_INDEX 2
#define VERTEX_SHADER_USAGE_3_INDEX 3
#define VERTEX_SHADER_USAGE_4_INDEX 4

namespace DX::Shaders::Vertex
{
    const D3DVERTEXELEMENT9 DECLARATION_XYZ_NORMAL_UV[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_NORMAL,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        D3DDECL_END()
    };

    const D3DVERTEXELEMENT9 DECLARATION_XYZ_DIFFUSE_UV[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_D3DCOLOR,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_COLOR,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_COLOR_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        D3DDECL_END()
    };

    const D3DVERTEXELEMENT9 DECLARATION_XYZ_UV3_DIFFUSE_UV4_UV[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_D3DCOLOR,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_3_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_COLOR_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_D3DCOLOR,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_COLOR,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_COLOR_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_D3DCOLOR,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_4_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_COLOR_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        D3DDECL_END()
    };

    const D3DVERTEXELEMENT9 DECLARATION_XYZRHW_DIFFUSE_SPECULAR_UV[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT4,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT4_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_D3DCOLOR,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_COLOR,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT4_SIZE + VERTEX_SHADER_COLOR_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_D3DCOLOR,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_COLOR,
            .UsageIndex = VERTEX_SHADER_USAGE_1_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT4_SIZE + VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_COLOR_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        D3DDECL_END()
    };

    const D3DVERTEXELEMENT9 DECLARATION_SKELETON[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_D3DCOLOR,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = VERTEX_SHADER_USAGE_1_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_BLENDWEIGHT,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_BLENDINDICES,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_NORMAL,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT4,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_PSIZE,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT4_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_COLOR,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT4_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT4,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_COLOR,
            .UsageIndex = VERTEX_SHADER_USAGE_1_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT4_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT4_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT4_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT4_SIZE + VERTEX_SHADER_FLOAT2_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_1_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_COLOR_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT4_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT4_SIZE + VERTEX_SHADER_FLOAT2_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_2_INDEX
        },
        D3DDECL_END()
    };

    const D3DVERTEXELEMENT9 DECLARATION_BASIS[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_NORMAL,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT2_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_BLENDWEIGHT,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT2_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_BLENDINDICES,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT2_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = VERTEX_SHADER_USAGE_1_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT2_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT2_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_PSIZE,
            .UsageIndex = VERTEX_SHADER_USAGE_0_INDEX
        },
        D3DDECL_END()
    };

    const char NAME_CUBIC[] = "Cubic";
    // Assets/cubic.vs
    const DWORD FUNC_CUBIC[265]
    {
        0xFFFE0101, 0x77FFFE, 0x47554244, 0x28,
        0x1A4, 0x0, 0x1, 0x68,
        0x27, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x75635C73, 0x2E636962,
        0xAB007376, 0x28, 0x2, 0x1E4,
        0x3, 0x1F0, 0x4, 0x1FC,
        0x5, 0x208, 0x6, 0x214,
        0x7, 0x220, 0x8, 0x22C,
        0x9, 0x238, 0xA, 0x244,
        0xB, 0x254, 0xC, 0x264,
        0xD, 0x274, 0xE, 0x284,
        0xF, 0x294, 0x10, 0x2A4,
        0x11, 0x2B4, 0x12, 0x2C0,
        0x13, 0x2D0, 0x14, 0x2E0,
        0x15, 0x2F0, 0x16, 0x300,
        0x17, 0x30C, 0x18, 0x318,
        0x19, 0x328, 0x1A, 0x334,
        0x1B, 0x344, 0x1C, 0x354,
        0x1D, 0x364, 0x1E, 0x374,
        0x1F, 0x384, 0x20, 0x394,
        0x21, 0x3A4, 0x22, 0x3B4,
        0x23, 0x3C0, 0x24, 0x3D0,
        0x25, 0x3E0, 0x26, 0x3F0,
        0x27, 0x400, 0x28, 0x410,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1, 0x800F0002,
        0xA0E40000, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x8, 0x80010002, 0x90E40003,
        0xA0E40004, 0x8, 0x80020002, 0x90E40003,
        0xA0E40014, 0x8, 0x80040002, 0x90E40003,
        0xA0E40016, 0x1, 0x80080002, 0xA0E40007,
        0xB, 0x800F0002, 0x80E40002, 0xA0E40018,
        0x9, 0x80010001, 0x80E40002, 0xA0E40008,
        0x9, 0x80020001, 0x80E40002, 0xA0E40015,
        0x9, 0x80040001, 0x80E40002, 0xA0E40017,
        0x1, 0x80080001, 0xA0FF0005, 0x1,
        0xD00F0000, 0x80E40001, 0x2, 0x800F0001,
        0xA0E40009, 0x91E40000, 0x7, 0x800F0002,
        0x80FF0001, 0x5, 0x800F0002, 0x80E40001,
        0x80E40002, 0x2, 0x800F0000, 0x90E40003,
        0x90E40003, 0x8, 0x80010000, 0x80E40000,
        0x80E40002, 0x5, 0x800F0001, 0x80000000,
        0x90E40003, 0x2, 0x800F0001, 0x80E40001,
        0x81E40002, 0x8, 0x80010000, 0x80E40001,
        0xA0E4000C, 0x8, 0x80020000, 0x80E40001,
        0xA0E4000D, 0x8, 0x80040000, 0x80E40001,
        0xA0E4000E, 0x1, 0xE00F0000, 0x80E40000,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0xFFFF
    };

    const char NAME_DIRLIGHT[] = "Dirlight";
    // Assets/dirlight1.vs
    const DWORD FUNC_DIRLIGHT_XYZ_NORMAL_UV[207]
    {
        0xFFFE0101, 0x64FFFE, 0x47554244, 0x28,
        0x158, 0x0, 0x1, 0x6C,
        0x1D, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x69645C73, 0x67696C72,
        0x2E317468, 0xAB007376, 0x28, 0x2,
        0x198, 0x3, 0x1A4, 0x4,
        0x1B0, 0x5, 0x1BC, 0x6,
        0x1C8, 0x7, 0x1D4, 0x8,
        0x1E0, 0x9, 0x1EC, 0xA,
        0x1F8, 0xB, 0x208, 0xC,
        0x218, 0xD, 0x228, 0xE,
        0x238, 0xF, 0x248, 0x10,
        0x258, 0x11, 0x268, 0x12,
        0x274, 0x13, 0x284, 0x14,
        0x294, 0x15, 0x2A4, 0x16,
        0x2B4, 0x17, 0x2C0, 0x18,
        0x2CC, 0x19, 0x2D8, 0x1A,
        0x2E8, 0x1B, 0x2F8, 0x1C,
        0x308, 0x1D, 0x318, 0x1E,
        0x328, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000003, 0x900F0003,
        0x1F, 0x80000005, 0x900F0007, 0x1,
        0x800F0002, 0xA0E40000, 0x1, 0x800F0001,
        0xA0E40000, 0x1, 0x800F0000, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x8, 0x80010002,
        0x90E40003, 0xA0E40004, 0x8, 0x80020002,
        0x90E40003, 0xA0E40014, 0x8, 0x80040002,
        0x90E40003, 0xA0E40016, 0x1, 0x80080002,
        0xA0E40007, 0xB, 0x800F0002, 0x80E40002,
        0xA0E40018, 0x9, 0x80010001, 0x80E40002,
        0xA0E40008, 0x9, 0x80020001, 0x80E40002,
        0xA0E40015, 0x9, 0x80040001, 0x80E40002,
        0xA0E40017, 0x1, 0x80080001, 0xA0FF0005,
        0x1, 0xD00F0000, 0x80E40001, 0x1,
        0xE00F0000, 0x90E40007, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80040000,
        0x80AA0000, 0xA0550005, 0x2, 0xC00F0001,
        0xA0550005, 0x81AA0000, 0xFFFF
    };

    // Assets/dirlight2.vs
    const DWORD FUNC_DIRLIGHT_BASIS[227]
    {
        0xFFFE0101, 0x6CFFFE, 0x47554244, 0x28,
        0x178, 0x0, 0x1, 0x6C,
        0x21, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x69645C73, 0x67696C72,
        0x2E327468, 0xAB007376, 0x28, 0x2,
        0x1B8, 0x3, 0x1C4, 0x4,
        0x1D0, 0x5, 0x1DC, 0x6,
        0x1E8, 0x7, 0x1F4, 0x8,
        0x200, 0x9, 0x20C, 0xA,
        0x218, 0xB, 0x224, 0xC,
        0x230, 0xD, 0x23C, 0xE,
        0x248, 0xF, 0x258, 0x10,
        0x268, 0x11, 0x278, 0x12,
        0x288, 0x13, 0x298, 0x14,
        0x2A8, 0x15, 0x2B8, 0x16,
        0x2C4, 0x17, 0x2D4, 0x18,
        0x2E4, 0x19, 0x2F4, 0x1A,
        0x304, 0x1B, 0x310, 0x1C,
        0x31C, 0x1D, 0x328, 0x1E,
        0x338, 0x1F, 0x348, 0x20,
        0x358, 0x21, 0x368, 0x22,
        0x378, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000003, 0x900F0003,
        0x1F, 0x80000005, 0x900F0007, 0x1F,
        0x80000001, 0x900F0001, 0x1F, 0x80000002,
        0x900F0002, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80000004, 0x900F0004, 0x1,
        0x800F0002, 0xA0E40000, 0x1, 0x800F0001,
        0xA0E40000, 0x1, 0x800F0000, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x8, 0x80010002,
        0x90E40003, 0xA0E40004, 0x8, 0x80020002,
        0x90E40003, 0xA0E40014, 0x8, 0x80040002,
        0x90E40003, 0xA0E40016, 0x1, 0x80080002,
        0xA0E40007, 0xB, 0x800F0002, 0x80E40002,
        0xA0E40018, 0x9, 0x80010001, 0x80E40002,
        0xA0E40008, 0x9, 0x80020001, 0x80E40002,
        0xA0E40015, 0x9, 0x80040001, 0x80E40002,
        0xA0E40017, 0x1, 0x80080001, 0xA0FF0005,
        0x1, 0xD00F0000, 0x80E40001, 0x1,
        0xE00F0000, 0x90E40007, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80040000,
        0x80AA0000, 0xA0550005, 0x2, 0xC00F0001,
        0xA0550005, 0x81AA0000, 0xFFFF
    };

    const char NAME_PRELIT[] = "Prelit";
    // Assets/prelit1.vs
    const DWORD FUNC_PRELIT_XYZ_UV3_DIFFUSE_UV4_UV[155]
    {
        0xFFFE0101, 0x52FFFE, 0x47554244, 0x28,
        0x110, 0x0, 0x1, 0x6C,
        0x14, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x72705C73, 0x74696C65,
        0x73762E31, 0xABABAB00, 0x28, 0x2,
        0x150, 0x3, 0x15C, 0x4,
        0x168, 0x5, 0x174, 0x6,
        0x180, 0x7, 0x18C, 0x8,
        0x198, 0x9, 0x1A4, 0xA,
        0x1B0, 0xB, 0x1C0, 0xC,
        0x1D0, 0xD, 0x1E0, 0xE,
        0x1F0, 0xF, 0x1FC, 0x10,
        0x208, 0x11, 0x218, 0x12,
        0x228, 0x13, 0x238, 0x14,
        0x248, 0x15, 0x258, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x80030005, 0x900F000A, 0x1F, 0x8000000A,
        0x900F0005, 0x1F, 0x80040005, 0x900F000B,
        0x1F, 0x80000005, 0x900F0007, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x1, 0xD00F0000, 0x90E40005, 0x1,
        0xE00F0000, 0x90E40007, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80040000,
        0x80AA0000, 0xA0550005, 0x2, 0xC00F0001,
        0xA0550005, 0x81AA0000, 0xFFFF
    };
    
    // Assets/prelit2.vs
    const DWORD FUNC_PRELIT_XYZ_DIFFUSE_UV[145]
    {
        0xFFFE0101, 0x4EFFFE, 0x47554244, 0x28,
        0x100, 0x0, 0x1, 0x6C,
        0x12, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x72705C73, 0x74696C65,
        0x73762E32, 0xABABAB00, 0x28, 0x2,
        0x140, 0x3, 0x14C, 0x4,
        0x158, 0x5, 0x164, 0x6,
        0x170, 0x7, 0x17C, 0x8,
        0x188, 0x9, 0x198, 0xA,
        0x1A8, 0xB, 0x1B8, 0xC,
        0x1C8, 0xD, 0x1D4, 0xE,
        0x1E0, 0xF, 0x1F0, 0x10,
        0x200, 0x11, 0x210, 0x12,
        0x220, 0x13, 0x230, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x8000000A, 0x900F0005, 0x1F, 0x80000005,
        0x900F0007, 0x1, 0x800F0000, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x1, 0xD00F0000,
        0x90E40005, 0x1, 0xE00F0000, 0x90E40007,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0xFFFF
    };

    const char NAME_PRETEX[] = "Pretex";
    // Assets/pretex.vs
    const DWORD FUNC_PRETEX[198]
    {
        0xFFFE0101, 0x61FFFE, 0x47554244, 0x28,
        0x14C, 0x0, 0x1, 0x68,
        0x1C, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x72705C73, 0x78657465,
        0x73762E, 0x28, 0x2, 0x18C,
        0x3, 0x198, 0x4, 0x1A4,
        0x5, 0x1B0, 0x6, 0x1BC,
        0x7, 0x1C8, 0x8, 0x1D4,
        0x9, 0x1E0, 0xA, 0x1EC,
        0xB, 0x1F8, 0xC, 0x204,
        0xD, 0x214, 0xE, 0x224,
        0xF, 0x234, 0x10, 0x244,
        0x11, 0x250, 0x12, 0x260,
        0x13, 0x270, 0x14, 0x280,
        0x15, 0x290, 0x16, 0x29C,
        0x17, 0x2A8, 0x18, 0x2B4,
        0x19, 0x2C4, 0x1A, 0x2D4,
        0x1B, 0x2E4, 0x1C, 0x2F4,
        0x1D, 0x304, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80030005,
        0x900F000A, 0x1F, 0x8000000A, 0x900F0005,
        0x1F, 0x80040005, 0x900F000B, 0x1F,
        0x80000005, 0x900F0007, 0x1, 0x800F0001,
        0xA0E40000, 0x1, 0x800F0000, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0001, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x1, 0xD00F0000, 0x90E40005,
        0x9, 0x80010000, 0x90E40000, 0xA0E4000F,
        0x9, 0x80020000, 0x90E40000, 0xA0E40010,
        0x9, 0x80040000, 0x90E40000, 0xA0E40011,
        0x9, 0x80080000, 0x90E40000, 0xA0E40012,
        0x1, 0x800F0001, 0x80E40000, 0x1,
        0xE00F0000, 0x80E40001, 0x1, 0xE00F0001,
        0x80E40001, 0x9, 0x80040000, 0x90E40000,
        0xA0E40002, 0x2, 0x80040000, 0x80AA0000,
        0xA1000006, 0x5, 0x80040000, 0x80AA0000,
        0xA0550006, 0xB, 0x80040000, 0x80AA0000,
        0xA0000005, 0xA, 0x80040000, 0x80AA0000,
        0xA0550005, 0x2, 0xC00F0001, 0xA0550005,
        0x81AA0000, 0xFFFF
    };

    const char NAME_SHDWBKFC[] = "Shdwbkfc";
    // Assets/shdwbkfc1.vs
    const DWORD FUNC_SHDWBKFC_XYZ_NORMAL_UV[177]
    {
        0xFFFE0101, 0x5AFFFE, 0x47554244, 0x28,
        0x130, 0x0, 0x1, 0x6C,
        0x18, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x68735C73, 0x6B627764,
        0x2E316366, 0xAB007376, 0x28, 0x2,
        0x170, 0x3, 0x17C, 0x4,
        0x188, 0x5, 0x194, 0x6,
        0x1A0, 0x7, 0x1AC, 0x8,
        0x1B8, 0x9, 0x1C4, 0xA,
        0x1D0, 0xB, 0x1E0, 0xC,
        0x1F0, 0xD, 0x200, 0xE,
        0x210, 0xF, 0x220, 0x10,
        0x230, 0x11, 0x240, 0x12,
        0x250, 0x13, 0x25C, 0x14,
        0x268, 0x15, 0x274, 0x16,
        0x284, 0x17, 0x294, 0x18,
        0x2A4, 0x19, 0x2B4, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x80000003, 0x900F0003, 0x1F, 0x80000005,
        0x900F0007, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0001,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x9, 0x80010000, 0x90E40000, 0xA0E4000F,
        0x9, 0x80020000, 0x90E40000, 0xA0E40010,
        0x9, 0x80040000, 0x90E40000, 0xA0E40011,
        0x9, 0x80080000, 0x90E40000, 0xA0E40012,
        0x1, 0x800F0001, 0x80E40000, 0x1,
        0xE00F0000, 0x80E40001, 0x1, 0xE00F0001,
        0x80E40001, 0x5, 0x80010000, 0x80FF0001,
        0xA0550006, 0xA, 0x80010000, 0x80000000,
        0xA0550005, 0xB, 0x80010000, 0x80000000,
        0xA0000005, 0x2, 0xD0080000, 0xA0550005,
        0x81000000, 0x1, 0xD0070000, 0xA0550005,
        0xFFFF
    };

    // Assets/shdwbkfc2.vs
    const DWORD FUNC_SHDWBKFC_BASIS[197]
    {
        0xFFFE0101, 0x62FFFE, 0x47554244, 0x28,
        0x150, 0x0, 0x1, 0x6C,
        0x1C, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x68735C73, 0x6B627764,
        0x2E326366, 0xAB007376, 0x28, 0x2,
        0x190, 0x3, 0x19C, 0x4,
        0x1A8, 0x5, 0x1B4, 0x6,
        0x1C0, 0x7, 0x1CC, 0x8,
        0x1D8, 0x9, 0x1E4, 0xA,
        0x1F0, 0xB, 0x1FC, 0xC,
        0x208, 0xD, 0x214, 0xE,
        0x220, 0xF, 0x230, 0x10,
        0x240, 0x11, 0x250, 0x12,
        0x260, 0x13, 0x270, 0x14,
        0x280, 0x15, 0x290, 0x16,
        0x2A0, 0x17, 0x2AC, 0x18,
        0x2B8, 0x19, 0x2C4, 0x1A,
        0x2D4, 0x1B, 0x2E4, 0x1C,
        0x2F4, 0x1D, 0x304, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x80000003, 0x900F0003, 0x1F, 0x80000005,
        0x900F0007, 0x1F, 0x80000001, 0x900F0001,
        0x1F, 0x80000002, 0x900F0002, 0x1F,
        0x80010005, 0x900F0008, 0x1F, 0x80000004,
        0x900F0004, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0001,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x9, 0x80010000, 0x90E40000, 0xA0E4000F,
        0x9, 0x80020000, 0x90E40000, 0xA0E40010,
        0x9, 0x80040000, 0x90E40000, 0xA0E40011,
        0x9, 0x80080000, 0x90E40000, 0xA0E40012,
        0x1, 0x800F0001, 0x80E40000, 0x1,
        0xE00F0000, 0x80E40001, 0x1, 0xE00F0001,
        0x80E40001, 0x5, 0x80010000, 0x80FF0001,
        0xA0550006, 0xA, 0x80010000, 0x80000000,
        0xA0550005, 0xB, 0x80010000, 0x80000000,
        0xA0000005, 0x2, 0xD0080000, 0xA0550005,
        0x81000000, 0x1, 0xD0070000, 0xA0550005,
        0xFFFF
    };

    const char NAME_TEXGEN[] = "Texgen";
    // Assets/texgen.vs
    const DWORD FUNC_TEXGEN[245]
    {
        0xFFFE0101, 0x71FFFE, 0x47554244, 0x28,
        0x18C, 0x0, 0x1, 0x68,
        0x24, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x65745C73, 0x6E656778,
        0x73762E, 0x28, 0x2, 0x1CC,
        0x3, 0x1D8, 0x4, 0x1E4,
        0x5, 0x1F0, 0x6, 0x1FC,
        0x7, 0x208, 0x8, 0x214,
        0x9, 0x220, 0xA, 0x22C,
        0xB, 0x238, 0xC, 0x248,
        0xD, 0x258, 0xE, 0x268,
        0xF, 0x278, 0x10, 0x288,
        0x11, 0x298, 0x12, 0x2A8,
        0x13, 0x2B4, 0x14, 0x2C4,
        0x15, 0x2D4, 0x16, 0x2E4,
        0x17, 0x2F4, 0x18, 0x300,
        0x19, 0x30C, 0x1A, 0x31C,
        0x1B, 0x32C, 0x1C, 0x33C,
        0x1D, 0x34C, 0x1E, 0x358,
        0x1F, 0x364, 0x20, 0x370,
        0x21, 0x380, 0x22, 0x390,
        0x23, 0x3A0, 0x24, 0x3B0,
        0x25, 0x3C0, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000005, 0x900F0007,
        0x1, 0x800F0002, 0xA0E40000, 0x1,
        0x800F0001, 0xA0E40000, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0000, 0xA0E40000,
        0x1, 0xE00F0001, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x8, 0x80010002,
        0x90E40003, 0xA0E40004, 0x8, 0x80020002,
        0x90E40003, 0xA0E40014, 0x8, 0x80040002,
        0x90E40003, 0xA0E40016, 0x1, 0x80080002,
        0xA0E40007, 0xB, 0x800F0002, 0x80E40002,
        0xA0E40018, 0x9, 0x80010001, 0x80E40002,
        0xA0E40008, 0x9, 0x80020001, 0x80E40002,
        0xA0E40015, 0x9, 0x80040001, 0x80E40002,
        0xA0E40017, 0x1, 0x80080001, 0xA0FF0005,
        0x1, 0xD00F0000, 0x80E40001, 0x9,
        0x80010000, 0x90E40000, 0xA0E4000F, 0x9,
        0x80020000, 0x90E40000, 0xA0E40010, 0x9,
        0x80040000, 0x90E40000, 0xA0E40011, 0x9,
        0x80080000, 0x90E40000, 0xA0E40012, 0x1,
        0x800F0001, 0x80E40000, 0x1, 0xE00F0000,
        0x80E40001, 0x1, 0xE00F0001, 0x80E40001,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0xFFFF
    };

    const char NAME_TLVERTEX[] = "Tlvertex";

    const char NAME_VBMPCUBE[] = "Vbmpcube";
    // Assets/vbmpcube.vs
    const DWORD FUNC_VBMPCUBE[410]
    {
        0xFFFE0101, 0xACFFFE, 0x47554244, 0x28,
        0x278, 0x0, 0x1, 0x6C,
        0x41, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62765C73, 0x7563706D,
        0x762E6562, 0xABAB0073, 0x28, 0x2,
        0x2B8, 0x3, 0x2C4, 0x4,
        0x2D0, 0x5, 0x2DC, 0x6,
        0x2E8, 0x7, 0x2F4, 0x8,
        0x300, 0x9, 0x30C, 0xA,
        0x318, 0xB, 0x324, 0xC,
        0x330, 0xD, 0x33C, 0xE,
        0x348, 0xF, 0x354, 0x10,
        0x360, 0x11, 0x36C, 0x12,
        0x378, 0x13, 0x388, 0x14,
        0x398, 0x15, 0x3A8, 0x16,
        0x3B8, 0x17, 0x3C8, 0x18,
        0x3D8, 0x19, 0x3E8, 0x1A,
        0x3F4, 0x1B, 0x404, 0x1C,
        0x414, 0x1D, 0x424, 0x1E,
        0x434, 0x1F, 0x440, 0x20,
        0x44C, 0x21, 0x45C, 0x22,
        0x46C, 0x23, 0x47C, 0x24,
        0x48C, 0x25, 0x49C, 0x26,
        0x4AC, 0x27, 0x4B8, 0x28,
        0x4C8, 0x29, 0x4DC, 0x2A,
        0x4EC, 0x2B, 0x4F8, 0x2C,
        0x508, 0x2D, 0x518, 0x2E,
        0x528, 0x2F, 0x538, 0x30,
        0x548, 0x31, 0x558, 0x32,
        0x564, 0x33, 0x574, 0x34,
        0x584, 0x35, 0x594, 0x36,
        0x5A4, 0x37, 0x5B0, 0x38,
        0x5C0, 0x39, 0x5D0, 0x3A,
        0x5E0, 0x3B, 0x5EC, 0x3C,
        0x5FC, 0x3D, 0x60C, 0x3E,
        0x61C, 0x3F, 0x628, 0x40,
        0x638, 0x41, 0x648, 0x42,
        0x658, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000003, 0x900F0003,
        0x1F, 0x80000005, 0x900F0007, 0x1F,
        0x80000001, 0x900F0001, 0x1F, 0x80000002,
        0x900F0002, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80000004, 0x900F0004, 0x1,
        0x800F0003, 0xA0E40000, 0x1, 0x800F0002,
        0xA0E40000, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0003,
        0xA0E40000, 0x1, 0xE00F0002, 0xA0E40000,
        0x1, 0xE00F0001, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x8, 0x80010002,
        0x90E40003, 0xA0E40004, 0x8, 0x80020002,
        0x90E40003, 0xA0E40014, 0x8, 0x80040002,
        0x90E40003, 0xA0E40016, 0x1, 0x80080002,
        0xA0E40007, 0xB, 0x800F0002, 0x80E40002,
        0xA0E40018, 0x9, 0x80010001, 0x80E40002,
        0xA0E40008, 0x9, 0x80020001, 0x80E40002,
        0xA0E40015, 0x9, 0x80040001, 0x80E40002,
        0xA0E40017, 0x1, 0x80080001, 0xA0FF0005,
        0x1, 0xD00F0000, 0x80E40001, 0x9,
        0x80040000, 0x90E40000, 0xA0E40002, 0x2,
        0x80040000, 0x80AA0000, 0xA1000006, 0x5,
        0x80040000, 0x80AA0000, 0xA0550006, 0xB,
        0x80040000, 0x80AA0000, 0xA0000005, 0xA,
        0x80040000, 0x80AA0000, 0xA0550005, 0x2,
        0xC00F0001, 0xA0550005, 0x81AA0000, 0x1,
        0x800F0001, 0x90E40002, 0x5, 0x80070000,
        0x90090001, 0x80520001, 0x4, 0x80070000,
        0x91520001, 0x80090001, 0x80A40000, 0x8,
        0x80080000, 0x80E40000, 0x80E40000, 0x7,
        0x80080000, 0x80FF0000, 0x5, 0x800F0000,
        0x80E40000, 0x80FF0000, 0x8, 0x80010002,
        0x90E40003, 0x80E40000, 0xD, 0x80010003,
        0x80000002, 0xA0000005, 0x2, 0x80010003,
        0x80000003, 0x80000003, 0x2, 0x80010003,
        0x80000003, 0xA1550005, 0x5, 0x800F0000,
        0x80E40000, 0x80000003, 0x1, 0x800F0002,
        0x90E40000, 0x2, 0x800F0002, 0xA0E40009,
        0x81E40002, 0x8, 0x80010001, 0x80E40002,
        0xA0E4000C, 0x8, 0x80020001, 0x80E40002,
        0xA0E4000D, 0x8, 0x80040001, 0x80E40002,
        0xA0E4000E, 0x1, 0xE00F0000, 0x90E40007,
        0x8, 0xE0010001, 0x90E40001, 0xA0E4000C,
        0x8, 0xE0020001, 0x90E40002, 0xA0E4000C,
        0x8, 0xE0040001, 0x80E40000, 0xA0E4000C,
        0x1, 0xE0080001, 0x80000001, 0x8,
        0xE0010002, 0x90E40001, 0xA0E4000D, 0x8,
        0xE0020002, 0x90E40002, 0xA0E4000D, 0x8,
        0xE0040002, 0x80E40000, 0xA0E4000D, 0x1,
        0xE0080002, 0x80550001, 0x8, 0xE0010003,
        0x90E40001, 0xA0E4000E, 0x8, 0xE0020003,
        0x90E40002, 0xA0E4000E, 0x8, 0xE0040003,
        0x80E40000, 0xA0E4000E, 0x1, 0xE0080003,
        0x80AA0001, 0xFFFF
    };

    const char NAME_VBMPSPEC[] = "Vbmpspec";
    // Assets/vbmpspec.vs
    const DWORD FUNC_VBMPSPEC[362]
    {
        0xFFFE0101, 0x9CFFFE, 0x47554244, 0x28,
        0x238, 0x0, 0x1, 0x6C,
        0x39, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62765C73, 0x7073706D,
        0x762E6365, 0xABAB0073, 0x28, 0x2,
        0x278, 0x3, 0x284, 0x4,
        0x290, 0x5, 0x29C, 0x6,
        0x2A8, 0x7, 0x2B4, 0x8,
        0x2C0, 0x9, 0x2CC, 0xA,
        0x2D8, 0xB, 0x2E4, 0xC,
        0x2F0, 0xD, 0x2FC, 0xE,
        0x308, 0xF, 0x314, 0x10,
        0x320, 0x11, 0x32C, 0x12,
        0x33C, 0x13, 0x34C, 0x14,
        0x35C, 0x15, 0x36C, 0x16,
        0x378, 0x17, 0x384, 0x18,
        0x390, 0x19, 0x3A0, 0x1A,
        0x3B4, 0x1B, 0x3C4, 0x1C,
        0x3D0, 0x1D, 0x3E0, 0x1E,
        0x3EC, 0x1F, 0x3FC, 0x20,
        0x40C, 0x21, 0x418, 0x22,
        0x428, 0x23, 0x438, 0x24,
        0x448, 0x25, 0x454, 0x26,
        0x464, 0x27, 0x474, 0x28,
        0x484, 0x29, 0x494, 0x2A,
        0x4A4, 0x2B, 0x4B4, 0x2C,
        0x4C4, 0x2D, 0x4D4, 0x2E,
        0x4E4, 0x2F, 0x4F8, 0x30,
        0x508, 0x31, 0x518, 0x32,
        0x528, 0x33, 0x538, 0x34,
        0x548, 0x35, 0x558, 0x36,
        0x568, 0x37, 0x574, 0x38,
        0x580, 0x39, 0x58C, 0x3A,
        0x598, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000003, 0x900F0003,
        0x1F, 0x80000005, 0x900F0007, 0x1F,
        0x80000001, 0x900F0001, 0x1F, 0x80000002,
        0x900F0002, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80000004, 0x900F0004, 0x1,
        0x800F0003, 0xA0E40000, 0x1, 0x800F0002,
        0xA0E40000, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0001, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0001, 0xA0E40000,
        0x1, 0xE00F0000, 0xA0E40000, 0x9,
        0xC0010000, 0x90E40000, 0xA0E40000, 0x9,
        0xC0020000, 0x90E40000, 0xA0E40001, 0x9,
        0xC0040000, 0x90E40000, 0xA0E40002, 0x9,
        0xC0080000, 0x90E40000, 0xA0E40003, 0x1,
        0xE00F0000, 0x90E40007, 0x1, 0xE00F0001,
        0x90E40007, 0x1, 0x800F0001, 0x90E40002,
        0x5, 0x80070000, 0x90090001, 0x80520001,
        0x4, 0x80070000, 0x91520001, 0x80090001,
        0x80A40000, 0x8, 0x80080000, 0x80E40000,
        0x80E40000, 0x7, 0x80080000, 0x80FF0000,
        0x5, 0x800F0000, 0x80E40000, 0x80FF0000,
        0x1, 0x800F0001, 0x90E40000, 0x2,
        0x800F0001, 0xA0E40009, 0x81E40001, 0x8,
        0x80080001, 0x80E40001, 0x80E40001, 0x7,
        0x80080001, 0x80FF0001, 0x5, 0x800F0001,
        0x80E40001, 0x80FF0001, 0x2, 0x800F0002,
        0xA0E40004, 0x80E40001, 0x8, 0x80080002,
        0x80E40002, 0x80E40002, 0x7, 0x80080002,
        0x80FF0002, 0x5, 0x800F0002, 0x80E40002,
        0x80FF0002, 0x8, 0x80010001, 0x80E40002,
        0x90E40001, 0x8, 0x80020001, 0x80E40002,
        0x90E40002, 0x8, 0x80040001, 0x80E40002,
        0x80E40000, 0x8, 0x80010002, 0x90E40003,
        0x80E40000, 0xD, 0x80010003, 0x80000002,
        0xA0000005, 0x2, 0x80010003, 0x80000003,
        0x80000003, 0x2, 0x80010003, 0x80000003,
        0xA1550005, 0x5, 0x80040001, 0x80AA0001,
        0x80000003, 0x4, 0xD0070000, 0x80E40001,
        0xA0AA0005, 0xA0AA0005, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80080000,
        0x80AA0000, 0xA0550005, 0x2, 0x80080000,
        0xA0550005, 0x81FF0000, 0x5, 0xD0080000,
        0x80FF0000, 0xA0FF0005, 0x1, 0xC00F0001,
        0xA0550005, 0x1, 0xD0010001, 0xA0000008,
        0x1, 0xD0020001, 0xA0000015, 0x1,
        0xD0040001, 0xA0000017, 0x1, 0xD0080001,
        0xA0550005, 0xFFFF
    };

    const char NAME_VBMPSPGN[] = "Vbmpspgn";
    // Assets/vbmpspgn.vs
    const DWORD FUNC_VBMPSPGN[381]
    {
        0xFFFE0101, 0xA2FFFE, 0x47554244, 0x28,
        0x250, 0x0, 0x1, 0x6C,
        0x3C, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62765C73, 0x7073706D,
        0x762E6E67, 0xABAB0073, 0x28, 0x2,
        0x290, 0x3, 0x29C, 0x4,
        0x2A8, 0x5, 0x2B4, 0x6,
        0x2C0, 0x7, 0x2CC, 0x8,
        0x2D8, 0x9, 0x2E4, 0xA,
        0x2F0, 0xB, 0x2FC, 0xC,
        0x308, 0xD, 0x314, 0xE,
        0x320, 0xF, 0x32C, 0x10,
        0x338, 0x11, 0x344, 0x12,
        0x354, 0x13, 0x364, 0x14,
        0x374, 0x15, 0x384, 0x16,
        0x390, 0x17, 0x3A0, 0x18,
        0x3B0, 0x19, 0x3C0, 0x1A,
        0x3D0, 0x1B, 0x3DC, 0x1C,
        0x3E8, 0x1D, 0x3F4, 0x1E,
        0x400, 0x1F, 0x410, 0x20,
        0x424, 0x21, 0x434, 0x22,
        0x440, 0x23, 0x450, 0x24,
        0x45C, 0x25, 0x46C, 0x26,
        0x47C, 0x27, 0x488, 0x28,
        0x498, 0x29, 0x4A8, 0x2A,
        0x4B8, 0x2B, 0x4C4, 0x2C,
        0x4D4, 0x2D, 0x4E4, 0x2E,
        0x4F4, 0x2F, 0x504, 0x30,
        0x514, 0x31, 0x524, 0x32,
        0x534, 0x33, 0x544, 0x34,
        0x554, 0x35, 0x564, 0x36,
        0x574, 0x37, 0x584, 0x38,
        0x594, 0x39, 0x5A4, 0x3A,
        0x5B4, 0x3B, 0x5C4, 0x3C,
        0x5D4, 0x3D, 0x5E4, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x80000003, 0x900F0003, 0x1F, 0x80000005,
        0x900F0007, 0x1F, 0x80000001, 0x900F0001,
        0x1F, 0x80000002, 0x900F0002, 0x1F,
        0x80010005, 0x900F0008, 0x1F, 0x80000004,
        0x900F0004, 0x1, 0x800F0003, 0xA0E40000,
        0x1, 0x800F0002, 0xA0E40000, 0x1,
        0x800F0001, 0xA0E40000, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0000, 0xA0E40000,
        0x1, 0xE00F0002, 0xA0E40000, 0x1,
        0xE00F0001, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x1, 0xE00F0000, 0x90E40007,
        0x9, 0x80010000, 0x90E40000, 0xA0E4000F,
        0x9, 0x80020000, 0x90E40000, 0xA0E40010,
        0x9, 0x80040000, 0x90E40000, 0xA0E40011,
        0x9, 0x80080000, 0x90E40000, 0xA0E40012,
        0x1, 0x800F0001, 0x80E40000, 0x1,
        0xE00F0001, 0x80E40001, 0x1, 0xE00F0002,
        0x80E40001, 0x1, 0x800F0001, 0x90E40002,
        0x5, 0x80070000, 0x90090001, 0x80520001,
        0x4, 0x80070000, 0x91520001, 0x80090001,
        0x80A40000, 0x8, 0x80080000, 0x80E40000,
        0x80E40000, 0x7, 0x80080000, 0x80FF0000,
        0x5, 0x800F0000, 0x80E40000, 0x80FF0000,
        0x1, 0x800F0001, 0x90E40000, 0x2,
        0x800F0001, 0xA0E40009, 0x81E40001, 0x8,
        0x80080001, 0x80E40001, 0x80E40001, 0x7,
        0x80080001, 0x80FF0001, 0x5, 0x800F0001,
        0x80E40001, 0x80FF0001, 0x2, 0x800F0002,
        0xA0E40004, 0x80E40001, 0x8, 0x80080002,
        0x80E40002, 0x80E40002, 0x7, 0x80080002,
        0x80FF0002, 0x5, 0x800F0002, 0x80E40002,
        0x80FF0002, 0x8, 0x80010001, 0x80E40002,
        0x90E40001, 0x8, 0x80020001, 0x80E40002,
        0x90E40002, 0x8, 0x80040001, 0x80E40002,
        0x80E40000, 0x8, 0x80010002, 0x90E40003,
        0x80E40000, 0xD, 0x80010003, 0x80000002,
        0xA0000005, 0x2, 0x80010003, 0x80000003,
        0x80000003, 0x2, 0x80010003, 0x80000003,
        0xA1550005, 0x5, 0x80040001, 0x80AA0001,
        0x80000003, 0x5, 0x800F0001, 0x80E40001,
        0xA0AA0005, 0x2, 0xD00F0000, 0x80E40001,
        0xA0AA0005, 0x9, 0x80040000, 0x90E40000,
        0xA0E40002, 0x2, 0x80040000, 0x80AA0000,
        0xA1000006, 0x5, 0x80040000, 0x80AA0000,
        0xA0550006, 0xB, 0x80040000, 0x80AA0000,
        0xA0000005, 0xA, 0x80080000, 0x80AA0000,
        0xA0550005, 0x2, 0x80080000, 0xA0550005,
        0x81FF0000, 0x5, 0xD0080000, 0x80FF0000,
        0xA0FF0005, 0x1, 0xC00F0001, 0xA0550005,
        0xFFFF
    };

    const char NAME_VBMPSPOM[] = "Vbmpspom";
    // Assets/vbmpspom.vs
    const DWORD FUNC_VBMPSPOM[431]
    {
        0xFFFE0101, 0xB4FFFE, 0x47554244, 0x28,
        0x298, 0x0, 0x1, 0x6C,
        0x45, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62765C73, 0x7073706D,
        0x762E6D6F, 0xABAB0073, 0x28, 0x2,
        0x2D8, 0x3, 0x2E4, 0x4,
        0x2F0, 0x5, 0x2FC, 0x6,
        0x308, 0x7, 0x314, 0x8,
        0x320, 0x9, 0x32C, 0xA,
        0x338, 0xB, 0x344, 0xC,
        0x350, 0xD, 0x35C, 0xE,
        0x368, 0xF, 0x374, 0x10,
        0x380, 0x11, 0x38C, 0x12,
        0x398, 0x13, 0x3A4, 0x14,
        0x3B4, 0x15, 0x3C4, 0x16,
        0x3D4, 0x17, 0x3E4, 0x18,
        0x3F0, 0x19, 0x3FC, 0x1A,
        0x408, 0x1B, 0x418, 0x1C,
        0x42C, 0x1D, 0x43C, 0x1E,
        0x448, 0x1F, 0x458, 0x20,
        0x464, 0x21, 0x474, 0x22,
        0x484, 0x23, 0x490, 0x24,
        0x4A0, 0x25, 0x4AC, 0x26,
        0x4BC, 0x27, 0x4CC, 0x28,
        0x4D8, 0x29, 0x4E8, 0x2A,
        0x4F8, 0x2B, 0x508, 0x2C,
        0x514, 0x2D, 0x524, 0x2E,
        0x534, 0x2F, 0x544, 0x30,
        0x554, 0x31, 0x564, 0x32,
        0x574, 0x33, 0x584, 0x34,
        0x594, 0x35, 0x5A4, 0x36,
        0x5B8, 0x37, 0x5C8, 0x38,
        0x5D8, 0x39, 0x5E8, 0x3A,
        0x5F8, 0x3B, 0x608, 0x3C,
        0x618, 0x3D, 0x628, 0x3E,
        0x634, 0x3F, 0x640, 0x40,
        0x650, 0x41, 0x660, 0x42,
        0x66C, 0x43, 0x67C, 0x44,
        0x688, 0x45, 0x698, 0x46,
        0x6A8, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000003, 0x900F0003,
        0x1F, 0x80000005, 0x900F0007, 0x1F,
        0x80000001, 0x900F0001, 0x1F, 0x80000002,
        0x900F0002, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80000004, 0x900F0004, 0x1,
        0x800F0005, 0xA0E40000, 0x1, 0x800F0004,
        0xA0E40000, 0x1, 0x800F0003, 0xA0E40000,
        0x1, 0x800F0002, 0xA0E40000, 0x1,
        0x800F0001, 0xA0E40000, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0001, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0001, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x1, 0xE00F0000, 0x90E40007,
        0x1, 0xE00F0001, 0x90E40007, 0x1,
        0x800F0001, 0x90E40002, 0x5, 0x80070000,
        0x90090001, 0x80520001, 0x4, 0x80070000,
        0x91520001, 0x80090001, 0x80A40000, 0x8,
        0x80080000, 0x80E40000, 0x80E40000, 0x7,
        0x80080000, 0x80FF0000, 0x5, 0x800F0000,
        0x80E40000, 0x80FF0000, 0x1, 0x800F0001,
        0x90E40000, 0x2, 0x800F0001, 0xA0E40009,
        0x81E40001, 0x8, 0x80080001, 0x80E40001,
        0x80E40001, 0x7, 0x80080001, 0x80FF0001,
        0x5, 0x800F0001, 0x80E40001, 0x80FF0001,
        0x1, 0x800F0004, 0x90E40000, 0x2,
        0x800F0004, 0xA0E40019, 0x81E40004, 0x8,
        0x80010005, 0x80E40004, 0x80E40004, 0x7,
        0x80010005, 0x80000005, 0x5, 0x800F0004,
        0x80E40004, 0x80000005, 0x2, 0x800F0002,
        0x80E40004, 0x80E40001, 0x8, 0x80080002,
        0x80E40002, 0x80E40002, 0x7, 0x80080002,
        0x80FF0002, 0x5, 0x800F0002, 0x80E40002,
        0x80FF0002, 0x8, 0x80010001, 0x80E40002,
        0x90E40001, 0x8, 0x80020001, 0x80E40002,
        0x90E40002, 0x8, 0x80040001, 0x80E40002,
        0x80E40000, 0x8, 0x80010002, 0x90E40003,
        0x80E40000, 0xD, 0x80010003, 0x80000002,
        0xA0000005, 0x2, 0x80010003, 0x80000003,
        0x80000003, 0x2, 0x80010003, 0x80000003,
        0xA1550005, 0x5, 0x80040001, 0x80AA0001,
        0x80000003, 0x4, 0xD0070000, 0x80E40001,
        0xA0AA0005, 0xA0AA0005, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80080000,
        0x80AA0000, 0xA0550005, 0x2, 0x80080000,
        0xA0550005, 0x81FF0000, 0x5, 0xD0080000,
        0x80FF0000, 0xA0FF0005, 0x1, 0xC00F0001,
        0xA0550005, 0x1, 0x800F0000, 0x90E40000,
        0x2, 0x80070000, 0xA0A40019, 0x81A40000,
        0x8, 0x80010000, 0x80E40000, 0x80E40000,
        0x7, 0x80010000, 0x80000000, 0x5,
        0x80010000, 0x80000000, 0xA0FF0019, 0x6,
        0x80010000, 0x80000000, 0x2, 0x80070000,
        0xA0550005, 0x81000000, 0xB, 0x80070000,
        0x80A40000, 0xA0E40018, 0x5, 0xD0070001,
        0x80A40000, 0xA0A4001A, 0xFFFF
    };

    const char NAME_VBMPSPPL[] = "Vbmpsppl";
    // Assets/vbmpsppl.vs
    const DWORD FUNC_VBMPSPPL[382]
    {
        0xFFFE0101, 0xA4FFFE, 0x47554244, 0x28,
        0x258, 0x0, 0x1, 0x6C,
        0x3D, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62765C73, 0x7073706D,
        0x762E6C70, 0xABAB0073, 0x28, 0x2,
        0x298, 0x3, 0x2A4, 0x4,
        0x2B0, 0x5, 0x2BC, 0x6,
        0x2C8, 0x7, 0x2D4, 0x8,
        0x2E0, 0x9, 0x2EC, 0xA,
        0x2F8, 0xB, 0x304, 0xC,
        0x310, 0xD, 0x31C, 0xE,
        0x328, 0xF, 0x334, 0x10,
        0x340, 0x11, 0x34C, 0x12,
        0x358, 0x13, 0x364, 0x14,
        0x374, 0x15, 0x384, 0x16,
        0x394, 0x17, 0x3A4, 0x18,
        0x3B0, 0x19, 0x3BC, 0x1A,
        0x3C8, 0x1B, 0x3D4, 0x1C,
        0x3E0, 0x1D, 0x3F0, 0x1E,
        0x404, 0x1F, 0x414, 0x20,
        0x420, 0x21, 0x430, 0x22,
        0x43C, 0x23, 0x44C, 0x24,
        0x45C, 0x25, 0x468, 0x26,
        0x478, 0x27, 0x488, 0x28,
        0x498, 0x29, 0x4A4, 0x2A,
        0x4B4, 0x2B, 0x4C4, 0x2C,
        0x4D4, 0x2D, 0x4E4, 0x2E,
        0x4F4, 0x2F, 0x504, 0x30,
        0x514, 0x31, 0x524, 0x32,
        0x534, 0x33, 0x548, 0x34,
        0x558, 0x35, 0x568, 0x36,
        0x578, 0x37, 0x588, 0x38,
        0x598, 0x39, 0x5A8, 0x3A,
        0x5B8, 0x3B, 0x5C4, 0x3C,
        0x5D0, 0x3D, 0x5DC, 0x3E,
        0x5E8, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000003, 0x900F0003,
        0x1F, 0x80000005, 0x900F0007, 0x1F,
        0x80000001, 0x900F0001, 0x1F, 0x80000002,
        0x900F0002, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80000004, 0x900F0004, 0x1,
        0x800F0003, 0xA0E40000, 0x1, 0x800F0002,
        0xA0E40000, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0001, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0003, 0xA0E40000,
        0x1, 0xE00F0002, 0xA0E40000, 0x1,
        0xE00F0001, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x1, 0xE00F0000, 0x90E40007,
        0x1, 0xE00F0001, 0x90E40007, 0x1,
        0xE00F0002, 0x90E40008, 0x1, 0xE00F0003,
        0xA0550005, 0x1, 0x800F0001, 0x90E40002,
        0x5, 0x80070000, 0x90090001, 0x80520001,
        0x4, 0x80070000, 0x91520001, 0x80090001,
        0x80A40000, 0x8, 0x80080000, 0x80E40000,
        0x80E40000, 0x7, 0x80080000, 0x80FF0000,
        0x5, 0x800F0000, 0x80E40000, 0x80FF0000,
        0x1, 0x800F0001, 0x90E40000, 0x2,
        0x800F0001, 0xA0E40009, 0x81E40001, 0x8,
        0x80080001, 0x80E40001, 0x80E40001, 0x7,
        0x80080001, 0x80FF0001, 0x5, 0x800F0001,
        0x80E40001, 0x80FF0001, 0x2, 0x800F0002,
        0x90E40004, 0x80E40001, 0x8, 0x80080002,
        0x80E40002, 0x80E40002, 0x7, 0x80080002,
        0x80FF0002, 0x5, 0x800F0002, 0x80E40002,
        0x80FF0002, 0x8, 0x80010001, 0x80E40002,
        0x90E40001, 0x8, 0x80020001, 0x80E40002,
        0x90E40002, 0x8, 0x80040001, 0x80E40002,
        0x80E40000, 0x8, 0x80010002, 0x90E40003,
        0x80E40000, 0xD, 0x80010003, 0x80000002,
        0xA0000005, 0x2, 0x80010003, 0x80000003,
        0x80000003, 0x2, 0x80010003, 0x80000003,
        0xA1550005, 0x5, 0x80040001, 0x80AA0001,
        0x80000003, 0x4, 0xD0070000, 0x80E40001,
        0xA0AA0005, 0xA0AA0005, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80080000,
        0x80AA0000, 0xA0550005, 0x2, 0x80080000,
        0xA0550005, 0x81FF0000, 0x5, 0xD0080000,
        0x80FF0000, 0xA0FF0005, 0x1, 0xC00F0001,
        0xA0550005, 0x1, 0xD0010001, 0xA0000008,
        0x1, 0xD0020001, 0xA0000015, 0x1,
        0xD0040001, 0xA0000017, 0x1, 0xD0080001,
        0xA0550005, 0xFFFF
    };

    const char NAME_VBUMP[] = "Vbump";
    // Assets/vbump.vs
    const DWORD FUNC_VBUMP[294]
    {
        0xFFFE0101, 0x83FFFE, 0x47554244, 0x28,
        0x1D4, 0x0, 0x1, 0x68,
        0x2D, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62765C73, 0x2E706D75,
        0xAB007376, 0x28, 0x2, 0x214,
        0x3, 0x220, 0x4, 0x22C,
        0x5, 0x238, 0x6, 0x244,
        0x7, 0x250, 0x8, 0x25C,
        0x9, 0x268, 0xA, 0x274,
        0xB, 0x280, 0xC, 0x28C,
        0xD, 0x298, 0xE, 0x2A4,
        0xF, 0x2B0, 0x10, 0x2BC,
        0x11, 0x2C8, 0x12, 0x2D8,
        0x13, 0x2E8, 0x14, 0x2F8,
        0x15, 0x308, 0x16, 0x318,
        0x17, 0x328, 0x18, 0x338,
        0x19, 0x348, 0x1A, 0x358,
        0x1B, 0x368, 0x1C, 0x374,
        0x1D, 0x380, 0x1E, 0x38C,
        0x1F, 0x39C, 0x20, 0x3B0,
        0x21, 0x3C0, 0x22, 0x3CC,
        0x23, 0x3DC, 0x24, 0x3EC,
        0x25, 0x3FC, 0x26, 0x40C,
        0x27, 0x41C, 0x28, 0x42C,
        0x29, 0x43C, 0x2A, 0x44C,
        0x2B, 0x45C, 0x2C, 0x46C,
        0x2D, 0x47C, 0x2E, 0x488,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1F, 0x80000001,
        0x900F0001, 0x1F, 0x80000002, 0x900F0002,
        0x1F, 0x80010005, 0x900F0008, 0x1F,
        0x80000004, 0x900F0004, 0x1, 0x800F0003,
        0xA0E40000, 0x1, 0x800F0002, 0xA0E40000,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0001,
        0xA0E40000, 0x1, 0xD00F0000, 0xA0E40000,
        0x1, 0xE00F0001, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80040000,
        0x80AA0000, 0xA0550005, 0x2, 0xC00F0001,
        0xA0550005, 0x81AA0000, 0x1, 0xE00F0000,
        0x90E40007, 0x1, 0xE00F0001, 0x90E40007,
        0x1, 0x800F0001, 0x90E40002, 0x5,
        0x80070000, 0x90090001, 0x80520001, 0x4,
        0x80070000, 0x91520001, 0x80090001, 0x80A40000,
        0x8, 0x80080000, 0x80E40000, 0x80E40000,
        0x7, 0x80080000, 0x80FF0000, 0x5,
        0x800F0000, 0x80E40000, 0x80FF0000, 0x8,
        0x80010001, 0xA0E40004, 0x90E40001, 0x8,
        0x80020001, 0xA0E40004, 0x90E40002, 0x8,
        0x80040001, 0xA0E40004, 0x80E40000, 0x8,
        0x80010002, 0x90E40003, 0x80E40000, 0xD,
        0x80010003, 0x80000002, 0xA0000005, 0x2,
        0x80010003, 0x80000003, 0x80000003, 0x2,
        0x80010003, 0x80000003, 0xA1550005, 0x5,
        0x80040001, 0x80AA0001, 0x80000003, 0x5,
        0x800F0001, 0x80E40001, 0xA0AA0005, 0x2,
        0xD00F0000, 0x80E40001, 0xA0AA0005, 0x1,
        0xD0080000, 0xA0FF0005, 0x1, 0xD00F0001,
        0xA0550005, 0xFFFF
    };

    const char NAME_VBUMPGEN[] = "Vbumpgen";
    // Assets/vbumpgen.vs
    const DWORD FUNC_VBUMPGEN[334]
    {
        0xFFFE0101, 0x92FFFE, 0x47554244, 0x28,
        0x210, 0x0, 0x1, 0x6C,
        0x34, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62765C73, 0x67706D75,
        0x762E6E65, 0xABAB0073, 0x28, 0x2,
        0x250, 0x3, 0x25C, 0x4,
        0x268, 0x5, 0x274, 0x6,
        0x280, 0x7, 0x28C, 0x8,
        0x298, 0x9, 0x2A4, 0xA,
        0x2B0, 0xB, 0x2BC, 0xC,
        0x2C8, 0xD, 0x2D4, 0xE,
        0x2E0, 0xF, 0x2EC, 0x10,
        0x2F8, 0x11, 0x304, 0x12,
        0x310, 0x13, 0x320, 0x14,
        0x330, 0x15, 0x340, 0x16,
        0x350, 0x17, 0x35C, 0x18,
        0x36C, 0x19, 0x37C, 0x1A,
        0x38C, 0x1B, 0x39C, 0x1C,
        0x3A8, 0x1D, 0x3B4, 0x1E,
        0x3C0, 0x1F, 0x3D0, 0x20,
        0x3E0, 0x21, 0x3F0, 0x22,
        0x400, 0x23, 0x410, 0x24,
        0x420, 0x25, 0x42C, 0x26,
        0x43C, 0x27, 0x450, 0x28,
        0x460, 0x29, 0x46C, 0x2A,
        0x47C, 0x2B, 0x48C, 0x2C,
        0x49C, 0x2D, 0x4AC, 0x2E,
        0x4BC, 0x2F, 0x4CC, 0x30,
        0x4DC, 0x31, 0x4EC, 0x32,
        0x4FC, 0x33, 0x50C, 0x34,
        0x51C, 0x35, 0x528, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x80000003, 0x900F0003, 0x1F, 0x80000005,
        0x900F0007, 0x1F, 0x80000001, 0x900F0001,
        0x1F, 0x80000002, 0x900F0002, 0x1F,
        0x80010005, 0x900F0008, 0x1F, 0x80000004,
        0x900F0004, 0x1, 0x800F0003, 0xA0E40000,
        0x1, 0x800F0002, 0xA0E40000, 0x1,
        0x800F0001, 0xA0E40000, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0001, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0002, 0xA0E40000, 0x1, 0xE00F0001,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x1, 0xE00F0000, 0x90E40007, 0x9,
        0x80010000, 0x90E40000, 0xA0E4000F, 0x9,
        0x80020000, 0x90E40000, 0xA0E40010, 0x9,
        0x80040000, 0x90E40000, 0xA0E40011, 0x9,
        0x80080000, 0x90E40000, 0xA0E40012, 0x1,
        0x800F0001, 0x80E40000, 0x1, 0xE00F0001,
        0x80E40001, 0x1, 0xE00F0002, 0x80E40001,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0x1, 0x800F0001, 0x90E40002, 0x5,
        0x80070000, 0x90090001, 0x80520001, 0x4,
        0x80070000, 0x91520001, 0x80090001, 0x80A40000,
        0x8, 0x80080000, 0x80E40000, 0x80E40000,
        0x7, 0x80080000, 0x80FF0000, 0x5,
        0x800F0000, 0x80E40000, 0x80FF0000, 0x8,
        0x80010001, 0xA0E40004, 0x90E40001, 0x8,
        0x80020001, 0xA0E40004, 0x90E40002, 0x8,
        0x80040001, 0xA0E40004, 0x80E40000, 0x8,
        0x80010002, 0x90E40003, 0x80E40000, 0xD,
        0x80010003, 0x80000002, 0xA0000005, 0x2,
        0x80010003, 0x80000003, 0x80000003, 0x2,
        0x80010003, 0x80000003, 0xA1550005, 0x5,
        0x80040001, 0x80AA0001, 0x80000003, 0x5,
        0x800F0001, 0x80E40001, 0xA0AA0005, 0x2,
        0xD00F0000, 0x80E40001, 0xA0AA0005, 0x1,
        0xD0080000, 0xA0FF0005, 0x1, 0xD00F0001,
        0xA0550005, 0xFFFF
    };

    const char NAME_VGLOSS[] = "Vgloss";
    // Assets/vgloss.vs
    const DWORD FUNC_VGLOSS[285]
    {
        0xFFFE0101, 0x7FFFFE, 0x47554244, 0x28,
        0x1C4, 0x0, 0x1, 0x68,
        0x2B, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x67765C73, 0x73736F6C,
        0x73762E, 0x28, 0x2, 0x204,
        0x3, 0x210, 0x4, 0x21C,
        0x5, 0x228, 0x6, 0x234,
        0x7, 0x240, 0x8, 0x24C,
        0x9, 0x258, 0xA, 0x264,
        0xB, 0x270, 0xC, 0x27C,
        0xD, 0x28C, 0xE, 0x29C,
        0xF, 0x2AC, 0x10, 0x2BC,
        0x11, 0x2CC, 0x12, 0x2DC,
        0x13, 0x2EC, 0x14, 0x2F8,
        0x15, 0x308, 0x16, 0x318,
        0x17, 0x328, 0x18, 0x338,
        0x19, 0x344, 0x1A, 0x350,
        0x1B, 0x35C, 0x1C, 0x368,
        0x1D, 0x378, 0x1E, 0x384,
        0x1F, 0x394, 0x20, 0x3A4,
        0x21, 0x3B4, 0x22, 0x3C4,
        0x23, 0x3D4, 0x24, 0x3E4,
        0x25, 0x3F4, 0x26, 0x404,
        0x27, 0x410, 0x28, 0x420,
        0x29, 0x430, 0x2A, 0x440,
        0x2B, 0x450, 0x2C, 0x460,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1, 0x800F0002,
        0xA0E40000, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0002,
        0xA0E40000, 0x1, 0xE00F0001, 0xA0E40000,
        0x1, 0xE00F0000, 0xA0E40000, 0x9,
        0xC0010000, 0x90E40000, 0xA0E40000, 0x9,
        0xC0020000, 0x90E40000, 0xA0E40001, 0x9,
        0xC0040000, 0x90E40000, 0xA0E40002, 0x9,
        0xC0080000, 0x90E40000, 0xA0E40003, 0x8,
        0x80010002, 0x90E40003, 0xA0E40004, 0x8,
        0x80020002, 0x90E40003, 0xA0E40014, 0x8,
        0x80040002, 0x90E40003, 0xA0E40016, 0x1,
        0x80080002, 0xA0E40007, 0xB, 0x800F0002,
        0x80E40002, 0xA0E40018, 0x9, 0x80010001,
        0x80E40002, 0xA0E40008, 0x9, 0x80020001,
        0x80E40002, 0xA0E40015, 0x9, 0x80040001,
        0x80E40002, 0xA0E40017, 0x1, 0x80080001,
        0xA0FF0005, 0x1, 0xD00F0000, 0x80E40001,
        0x1, 0xE00F0000, 0x90E40007, 0x1,
        0xE00F0001, 0x90E40007, 0x2, 0x800F0001,
        0xA0E40009, 0x91E40000, 0x7, 0x800F0002,
        0x80FF0001, 0x5, 0x800F0002, 0x80E40001,
        0x80E40002, 0x2, 0x800F0000, 0x90E40003,
        0x90E40003, 0x8, 0x80010000, 0x80E40000,
        0x80E40002, 0x5, 0x800F0001, 0x80000000,
        0x90E40003, 0x2, 0x800F0001, 0x80E40001,
        0x81E40002, 0x8, 0x80010000, 0x80E40001,
        0xA0E4000C, 0x8, 0x80020000, 0x80E40001,
        0xA0E4000D, 0x8, 0x80040000, 0x80E40001,
        0xA0E4000E, 0x1, 0xE00F0002, 0x80E40000,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0xFFFF
    };

    const char NAME_VLMAP[] = "Vlmap";
    // Assets/vlmap.vs
    const DWORD FUNC_VLMAP[179]
    {
        0xFFFE0101, 0x5BFFFE, 0x47554244, 0x28,
        0x134, 0x0, 0x1, 0x68,
        0x19, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6C765C73, 0x2E70616D,
        0xAB007376, 0x28, 0x2, 0x174,
        0x3, 0x180, 0x4, 0x18C,
        0x5, 0x198, 0x6, 0x1A4,
        0x7, 0x1B0, 0x8, 0x1BC,
        0x9, 0x1C8, 0xA, 0x1D4,
        0xB, 0x1E0, 0xC, 0x1EC,
        0xD, 0x1F8, 0xE, 0x208,
        0xF, 0x218, 0x10, 0x228,
        0x11, 0x238, 0x12, 0x244,
        0x13, 0x250, 0x14, 0x25C,
        0x15, 0x268, 0x16, 0x278,
        0x17, 0x288, 0x18, 0x298,
        0x19, 0x2A8, 0x1A, 0x2B8,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1F, 0x80000001,
        0x900F0001, 0x1F, 0x80000002, 0x900F0002,
        0x1F, 0x80010005, 0x900F0008, 0x1F,
        0x80000004, 0x900F0004, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0000, 0xA0E40000,
        0x1, 0xE00F0001, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x1, 0xD0070000,
        0xA0E40007, 0x1, 0xD0080000, 0xA0FF0005,
        0x1, 0xE00F0000, 0x90E40007, 0x1,
        0xE00F0001, 0x90E40008, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80040000,
        0x80AA0000, 0xA0550005, 0x2, 0xC00F0001,
        0xA0550005, 0x81AA0000, 0xFFFF
    };

    const char NAME_VLMAP2[] = "Vlmap2";
    // Assets/vlmap2.vs
    const DWORD FUNC_VLMAP2[159]
    {
        0xFFFE0101, 0x53FFFE, 0x47554244, 0x28,
        0x114, 0x0, 0x1, 0x68,
        0x15, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6C765C73, 0x3270616D,
        0x73762E, 0x28, 0x2, 0x154,
        0x3, 0x160, 0x4, 0x16C,
        0x5, 0x178, 0x6, 0x184,
        0x7, 0x190, 0x8, 0x19C,
        0x9, 0x1A8, 0xA, 0x1B8,
        0xB, 0x1C8, 0xC, 0x1D8,
        0xD, 0x1E8, 0xE, 0x1F4,
        0xF, 0x200, 0x10, 0x20C,
        0x11, 0x218, 0x12, 0x228,
        0x13, 0x238, 0x14, 0x248,
        0x15, 0x258, 0x16, 0x268,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0000, 0xA0E40000,
        0x1, 0xE00F0001, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x1, 0xD0070000,
        0xA0E40007, 0x1, 0xD0080000, 0xA0FF0005,
        0x1, 0xE00F0000, 0x90E40007, 0x1,
        0xE00F0001, 0x90E40003, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80040000,
        0x80AA0000, 0xA0550005, 0x2, 0xC00F0001,
        0xA0550005, 0x81AA0000, 0xFFFF
    };

    const char NAME_VLMBS[] = "Vlmbs";
    // Assets/vlmbs.vs
    const DWORD FUNC_VLMBS[350]
    {
        0xFFFE0101, 0x97FFFE, 0x47554244, 0x28,
        0x224, 0x0, 0x1, 0x68,
        0x37, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6C765C73, 0x2E73626D,
        0xAB007376, 0x28, 0x2, 0x264,
        0x3, 0x270, 0x4, 0x27C,
        0x5, 0x288, 0x6, 0x294,
        0x7, 0x2A0, 0x8, 0x2AC,
        0x9, 0x2B8, 0xA, 0x2C4,
        0xB, 0x2D0, 0xC, 0x2DC,
        0xD, 0x2E8, 0xE, 0x2F4,
        0xF, 0x300, 0x10, 0x30C,
        0x11, 0x318, 0x12, 0x324,
        0x13, 0x334, 0x14, 0x344,
        0x15, 0x354, 0x16, 0x364,
        0x17, 0x374, 0x18, 0x384,
        0x19, 0x394, 0x1A, 0x3A4,
        0x1B, 0x3B4, 0x1C, 0x3C4,
        0x1D, 0x3D0, 0x1E, 0x3DC,
        0x1F, 0x3E8, 0x20, 0x3F4,
        0x21, 0x400, 0x22, 0x410,
        0x23, 0x424, 0x24, 0x434,
        0x25, 0x440, 0x26, 0x450,
        0x27, 0x45C, 0x28, 0x46C,
        0x29, 0x47C, 0x2A, 0x488,
        0x2B, 0x498, 0x2C, 0x4A8,
        0x2D, 0x4B8, 0x2E, 0x4C4,
        0x2F, 0x4D4, 0x30, 0x4E4,
        0x31, 0x4F4, 0x32, 0x504,
        0x33, 0x514, 0x34, 0x524,
        0x35, 0x534, 0x36, 0x544,
        0x37, 0x554, 0x38, 0x568,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1F, 0x80000001,
        0x900F0001, 0x1F, 0x80000002, 0x900F0002,
        0x1F, 0x80010005, 0x900F0008, 0x1F,
        0x80000004, 0x900F0004, 0x1, 0x800F0003,
        0xA0E40000, 0x1, 0x800F0002, 0xA0E40000,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0003, 0xA0E40000,
        0x1, 0xE00F0002, 0xA0E40000, 0x1,
        0xE00F0001, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x9, 0x80040000, 0x90E40000,
        0xA0E40002, 0x2, 0x80040000, 0x80AA0000,
        0xA1000006, 0x5, 0x80040000, 0x80AA0000,
        0xA0550006, 0xB, 0x80040000, 0x80AA0000,
        0xA0000005, 0xA, 0x80040000, 0x80AA0000,
        0xA0550005, 0x2, 0xC00F0001, 0xA0550005,
        0x81AA0000, 0x1, 0xE00F0000, 0x90E40007,
        0x1, 0xE00F0001, 0x90E40007, 0x1,
        0xE00F0002, 0x90E40007, 0x1, 0xE00F0003,
        0x90E40008, 0x1, 0x800F0001, 0x90E40002,
        0x5, 0x80070000, 0x90090001, 0x80520001,
        0x4, 0x80070000, 0x91520001, 0x80090001,
        0x80A40000, 0x8, 0x80080000, 0x80E40000,
        0x80E40000, 0x7, 0x80080000, 0x80FF0000,
        0x5, 0x800F0000, 0x80E40000, 0x80FF0000,
        0x1, 0x800F0001, 0x90E40000, 0x2,
        0x800F0001, 0xA0E40009, 0x81E40001, 0x8,
        0x80080001, 0x80E40001, 0x80E40001, 0x7,
        0x80080001, 0x80FF0001, 0x5, 0x800F0001,
        0x80E40001, 0x80FF0001, 0x2, 0x800F0002,
        0x90E40004, 0x80E40001, 0x8, 0x80080002,
        0x80E40002, 0x80E40002, 0x7, 0x80080002,
        0x80FF0002, 0x5, 0x800F0002, 0x80E40002,
        0x80FF0002, 0x8, 0x80010001, 0x80E40002,
        0x90E40001, 0x8, 0x80020001, 0x80E40002,
        0x90E40002, 0x8, 0x80040001, 0x80E40002,
        0x80E40000, 0x8, 0x80010002, 0x90E40003,
        0x80E40000, 0xD, 0x80010003, 0x80000002,
        0xA0000005, 0x2, 0x80010003, 0x80000003,
        0x80000003, 0x2, 0x80010003, 0x80000003,
        0xA1550005, 0x5, 0x80040001, 0x80AA0001,
        0x80000003, 0x4, 0xD0070000, 0x80E40001,
        0xA0AA0005, 0xA0AA0005, 0x1, 0xD0080000,
        0xA0FF0005, 0xFFFF
    };

    const char NAME_VOMNI[] = "Vomni";
    // Assets/vomni1.vs
    const DWORD FUNC_VOMNI_XYZ_UV3_DIFFUSE_UV4_UV[174]
    {
        0xFFFE0101, 0x59FFFE, 0x47554244, 0x28,
        0x12C, 0x0, 0x1, 0x68,
        0x18, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6F765C73, 0x31696E6D,
        0x73762E, 0x28, 0x2, 0x16C,
        0x3, 0x178, 0x4, 0x184,
        0x5, 0x190, 0x6, 0x19C,
        0x7, 0x1A8, 0x8, 0x1B4,
        0x9, 0x1C0, 0xA, 0x1CC,
        0xB, 0x1DC, 0xC, 0x1EC,
        0xD, 0x1FC, 0xE, 0x20C,
        0xF, 0x218, 0x10, 0x224,
        0x11, 0x234, 0x12, 0x244,
        0x13, 0x250, 0x14, 0x260,
        0x15, 0x26C, 0x16, 0x27C,
        0x17, 0x28C, 0x18, 0x29C,
        0x19, 0x2A8, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80030005,
        0x900F000A, 0x1F, 0x8000000A, 0x900F0005,
        0x1F, 0x80040005, 0x900F000B, 0x1F,
        0x80000005, 0x900F0007, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0000, 0xA0E40000,
        0x1, 0xE00F0000, 0xA0E40000, 0x9,
        0xC0010000, 0x90E40000, 0xA0E40000, 0x9,
        0xC0020000, 0x90E40000, 0xA0E40001, 0x9,
        0xC0040000, 0x90E40000, 0xA0E40002, 0x9,
        0xC0080000, 0x90E40000, 0xA0E40003, 0x1,
        0xE00F0000, 0x90E40007, 0x1, 0x800F0000,
        0x90E40000, 0x2, 0x80070000, 0xA0A40019,
        0x81E40000, 0x8, 0x80010000, 0x80E40000,
        0x80E40000, 0x7, 0x80010000, 0x80000000,
        0x5, 0x80010000, 0x80000000, 0xA0FF0019,
        0x6, 0x80010000, 0x80000000, 0x2,
        0x80070000, 0xA0550005, 0x81000000, 0xB,
        0x80070000, 0x80A40000, 0xA0E40018, 0x5,
        0xD0070000, 0x80A40000, 0xA0A4001A, 0x1,
        0xD0080000, 0xA0FF0005, 0x1, 0xC00F0001,
        0xA0550005, 0xFFFF
    };

    // Assets/vomni2.vs
    const DWORD FUNC_VOMNI_XYZ_DIFFUSE_UV[164]
    {
        0xFFFE0101, 0x55FFFE, 0x47554244, 0x28,
        0x11C, 0x0, 0x1, 0x68,
        0x16, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6F765C73, 0x32696E6D,
        0x73762E, 0x28, 0x2, 0x15C,
        0x3, 0x168, 0x4, 0x174,
        0x5, 0x180, 0x6, 0x18C,
        0x7, 0x198, 0x8, 0x1A4,
        0x9, 0x1B4, 0xA, 0x1C4,
        0xB, 0x1D4, 0xC, 0x1E4,
        0xD, 0x1F0, 0xE, 0x1FC,
        0xF, 0x20C, 0x10, 0x21C,
        0x11, 0x228, 0x12, 0x238,
        0x13, 0x244, 0x14, 0x254,
        0x15, 0x264, 0x16, 0x274,
        0x17, 0x280, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x8000000A,
        0x900F0005, 0x1F, 0x80000005, 0x900F0007,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x1, 0xE00F0000, 0x90E40007,
        0x1, 0x800F0000, 0x90E40000, 0x2,
        0x80070000, 0xA0A40019, 0x81E40000, 0x8,
        0x80010000, 0x80E40000, 0x80E40000, 0x7,
        0x80010000, 0x80000000, 0x5, 0x80010000,
        0x80000000, 0xA0FF0019, 0x6, 0x80010000,
        0x80000000, 0x2, 0x80070000, 0xA0550005,
        0x81000000, 0xB, 0x80070000, 0x80A40000,
        0xA0E40018, 0x5, 0xD0070000, 0x80A40000,
        0xA0A4001A, 0x1, 0xD0080000, 0xA0FF0005,
        0x1, 0xC00F0001, 0xA0550005, 0xFFFF
    };

    // Assets/vomni3.vs
    const DWORD FUNC_VOMNI_BASIS[184]
    {
        0xFFFE0101, 0x5DFFFE, 0x47554244, 0x28,
        0x13C, 0x0, 0x1, 0x68,
        0x1A, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6F765C73, 0x33696E6D,
        0x73762E, 0x28, 0x2, 0x17C,
        0x3, 0x188, 0x4, 0x194,
        0x5, 0x1A0, 0x6, 0x1AC,
        0x7, 0x1B8, 0x8, 0x1C4,
        0x9, 0x1D0, 0xA, 0x1DC,
        0xB, 0x1E8, 0xC, 0x1F4,
        0xD, 0x204, 0xE, 0x214,
        0xF, 0x224, 0x10, 0x234,
        0x11, 0x240, 0x12, 0x24C,
        0x13, 0x25C, 0x14, 0x26C,
        0x15, 0x278, 0x16, 0x288,
        0x17, 0x294, 0x18, 0x2A4,
        0x19, 0x2B4, 0x1A, 0x2C4,
        0x1B, 0x2D0, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000005, 0x900F0007,
        0x1F, 0x80000001, 0x900F0001, 0x1F,
        0x80000002, 0x900F0002, 0x1F, 0x80010005,
        0x900F0008, 0x1F, 0x80000004, 0x900F0004,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x1, 0xE00F0000, 0x90E40007,
        0x1, 0x800F0000, 0x90E40000, 0x2,
        0x80070000, 0xA0A40019, 0x81E40000, 0x8,
        0x80010000, 0x80E40000, 0x80E40000, 0x7,
        0x80010000, 0x80000000, 0x5, 0x80010000,
        0x80000000, 0xA0FF0019, 0x6, 0x80010000,
        0x80000000, 0x2, 0x80070000, 0xA0550005,
        0x81000000, 0xB, 0x80070000, 0x80A40000,
        0xA0E40018, 0x5, 0xD0070000, 0x80A40000,
        0xA0A4001A, 0x1, 0xD0080000, 0xA0FF0005,
        0x1, 0xC00F0001, 0xA0550005, 0xFFFF
    };

    const char NAME_VOMNIBMP[] = "Vomnibmp";
    // Assets/vomnibmp.vs
    const DWORD FUNC_VOMNIBMP[353]
    {
        0xFFFE0101, 0x98FFFE, 0x47554244, 0x28,
        0x228, 0x0, 0x1, 0x6C,
        0x37, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6F765C73, 0x62696E6D,
        0x762E706D, 0xABAB0073, 0x28, 0x2,
        0x268, 0x3, 0x274, 0x4,
        0x280, 0x5, 0x28C, 0x6,
        0x298, 0x7, 0x2A4, 0x8,
        0x2B0, 0x9, 0x2BC, 0xA,
        0x2C8, 0xB, 0x2D4, 0xC,
        0x2E0, 0xD, 0x2EC, 0xE,
        0x2F8, 0xF, 0x304, 0x10,
        0x310, 0x11, 0x31C, 0x12,
        0x32C, 0x13, 0x33C, 0x14,
        0x34C, 0x15, 0x35C, 0x16,
        0x368, 0x17, 0x374, 0x18,
        0x380, 0x19, 0x390, 0x1A,
        0x3A4, 0x1B, 0x3B4, 0x1C,
        0x3C0, 0x1D, 0x3D0, 0x1E,
        0x3DC, 0x1F, 0x3EC, 0x20,
        0x3FC, 0x21, 0x408, 0x22,
        0x418, 0x23, 0x428, 0x24,
        0x434, 0x25, 0x444, 0x26,
        0x454, 0x27, 0x464, 0x28,
        0x474, 0x29, 0x484, 0x2A,
        0x494, 0x2B, 0x4A4, 0x2C,
        0x4B4, 0x2D, 0x4C4, 0x2E,
        0x4D4, 0x2F, 0x4E4, 0x30,
        0x4F4, 0x31, 0x504, 0x32,
        0x514, 0x33, 0x524, 0x34,
        0x534, 0x35, 0x544, 0x36,
        0x554, 0x37, 0x564, 0x38,
        0x574, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000003, 0x900F0003,
        0x1F, 0x80000005, 0x900F0007, 0x1F,
        0x80000001, 0x900F0001, 0x1F, 0x80000002,
        0x900F0002, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80000004, 0x900F0004, 0x1,
        0x800F0003, 0xA0E40000, 0x1, 0x800F0002,
        0xA0E40000, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0001, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0001, 0xA0E40000,
        0x1, 0xE00F0000, 0xA0E40000, 0x9,
        0xC0010000, 0x90E40000, 0xA0E40000, 0x9,
        0xC0020000, 0x90E40000, 0xA0E40001, 0x9,
        0xC0040000, 0x90E40000, 0xA0E40002, 0x9,
        0xC0080000, 0x90E40000, 0xA0E40003, 0x1,
        0xE00F0000, 0x90E40007, 0x1, 0xE00F0001,
        0x90E40007, 0x1, 0x800F0001, 0x90E40002,
        0x5, 0x80070000, 0x90090001, 0x80520001,
        0x4, 0x80070000, 0x91520001, 0x80090001,
        0x80A40000, 0x8, 0x80080000, 0x80E40000,
        0x80E40000, 0x7, 0x80080000, 0x80FF0000,
        0x5, 0x800F0000, 0x80E40000, 0x80FF0000,
        0x1, 0x800F0002, 0x90E40000, 0x2,
        0x80070002, 0xA0A40019, 0x81A40002, 0x8,
        0x80080002, 0x80E40002, 0x80E40002, 0x7,
        0x80080002, 0x80FF0002, 0x5, 0x80070002,
        0x80A40002, 0x80FF0002, 0x5, 0x80080002,
        0x80FF0002, 0xA0FF0019, 0x6, 0x80080002,
        0x80FF0002, 0x2, 0x80080002, 0xA0550005,
        0x81FF0002, 0xB, 0x80080002, 0x80FF0002,
        0xA0000005, 0x8, 0x80010001, 0x80E40002,
        0x90E40001, 0x8, 0x80020001, 0x80E40002,
        0x90E40002, 0x8, 0x80040001, 0x80E40002,
        0x80E40000, 0x8, 0x80010002, 0x90E40003,
        0x80E40000, 0xD, 0x80010003, 0x80000002,
        0xA0000005, 0x2, 0x80010003, 0x80000003,
        0x80000003, 0x2, 0x80010003, 0x80000003,
        0xA1550005, 0x5, 0x80040001, 0x80AA0001,
        0x80000003, 0x5, 0x800F0001, 0x80E40001,
        0xA0AA0005, 0x2, 0xD0070000, 0x80E40001,
        0xA0AA0005, 0x5, 0xD00F0001, 0x80FF0002,
        0xA0E4001A, 0x9, 0x80040000, 0x90E40000,
        0xA0E40002, 0x2, 0x80040000, 0x80AA0000,
        0xA1000006, 0x5, 0x80040000, 0x80AA0000,
        0xA0550006, 0xB, 0x80040000, 0x80AA0000,
        0xA0000005, 0xA, 0x80080000, 0x80AA0000,
        0xA0550005, 0x2, 0x80080000, 0xA0550005,
        0x81FF0000, 0x5, 0xD0080000, 0x80FF0000,
        0xA0FF0005, 0x1, 0xC00F0001, 0xA0550005,
        0xFFFF
    };

    const char NAME_VOMNIN[] = "Vomnin";
    // Assets/vomnin.vs
    const DWORD FUNC_VOMNIN[192]
    {
        0xFFFE0101, 0x5FFFFE, 0x47554244, 0x28,
        0x144, 0x0, 0x1, 0x68,
        0x1B, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6F765C73, 0x6E696E6D,
        0x73762E, 0x28, 0x2, 0x184,
        0x3, 0x190, 0x4, 0x19C,
        0x5, 0x1A8, 0x6, 0x1B4,
        0x7, 0x1C0, 0x8, 0x1CC,
        0x9, 0x1D8, 0xA, 0x1E8,
        0xB, 0x1F8, 0xC, 0x208,
        0xD, 0x218, 0xE, 0x224,
        0xF, 0x230, 0x10, 0x240,
        0x11, 0x250, 0x12, 0x25C,
        0x13, 0x26C, 0x14, 0x27C,
        0x15, 0x288, 0x16, 0x298,
        0x17, 0x2A8, 0x18, 0x2B8,
        0x19, 0x2C8, 0x1A, 0x2D4,
        0x1B, 0x2E4, 0x1C, 0x2F0,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1, 0x800F0001,
        0xA0E40000, 0x1, 0x800F0000, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x1, 0xE00F0000,
        0x90E40007, 0x1, 0x800F0000, 0x90E40000,
        0x2, 0x80070000, 0xA0A40019, 0x81A40000,
        0x8, 0x80010001, 0x80E40000, 0x80E40000,
        0x7, 0x80010001, 0x80000001, 0x5,
        0x80070000, 0x80A40000, 0x80000001, 0x5,
        0x80010001, 0x80000001, 0xA0FF0019, 0x6,
        0x80010001, 0x80000001, 0x2, 0x80010001,
        0xA0550005, 0x81000001, 0xB, 0x80010001,
        0x80000001, 0xA0000005, 0x8, 0x80020001,
        0x80E40000, 0x90E40003, 0xB, 0x80020001,
        0x80550001, 0xA0000005, 0x1, 0x80070000,
        0x80000001, 0x5, 0xD0070000, 0x80A40000,
        0xA0A4001A, 0x1, 0xD0080000, 0xA0FF0005,
        0x1, 0xC00F0001, 0xA0550005, 0xFFFF
    };

    const char NAME_VSKEL[] = "Vskel";
    // Assets/vskel.vs
    const DWORD FUNC_VSKEL[531]
    {
        0xFFFE0101, 0xD5FFFE, 0x47554244, 0x28,
        0x31C, 0x0, 0x1, 0x68,
        0x56, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x73765C73, 0x2E6C656B,
        0xAB007376, 0x28, 0x2, 0x35C,
        0x3, 0x368, 0x4, 0x374,
        0x5, 0x380, 0x6, 0x38C,
        0x7, 0x398, 0x8, 0x3A4,
        0x9, 0x3B0, 0xA, 0x3BC,
        0xB, 0x3C8, 0xC, 0x3D4,
        0xD, 0x3E0, 0xE, 0x3EC,
        0xF, 0x3F8, 0x10, 0x404,
        0x11, 0x410, 0x12, 0x41C,
        0x13, 0x428, 0x14, 0x434,
        0x15, 0x440, 0x16, 0x44C,
        0x17, 0x45C, 0x18, 0x46C,
        0x19, 0x47C, 0x1A, 0x48C,
        0x1B, 0x49C, 0x1C, 0x4AC,
        0x1D, 0x4B8, 0x1E, 0x4C8,
        0x1F, 0x4D8, 0x20, 0x4E8,
        0x21, 0x4F8, 0x22, 0x508,
        0x23, 0x518, 0x24, 0x528,
        0x25, 0x538, 0x26, 0x548,
        0x27, 0x558, 0x28, 0x568,
        0x29, 0x578, 0x2A, 0x584,
        0x2B, 0x594, 0x2C, 0x5A4,
        0x2D, 0x5B4, 0x2E, 0x5C4,
        0x2F, 0x5D4, 0x30, 0x5E4,
        0x31, 0x5F4, 0x32, 0x604,
        0x33, 0x614, 0x34, 0x624,
        0x35, 0x630, 0x36, 0x640,
        0x37, 0x650, 0x38, 0x660,
        0x39, 0x670, 0x3A, 0x680,
        0x3B, 0x690, 0x3C, 0x6A0,
        0x3D, 0x6B0, 0x3E, 0x6C0,
        0x3F, 0x6D0, 0x40, 0x6DC,
        0x41, 0x6EC, 0x42, 0x6F8,
        0x43, 0x708, 0x44, 0x718,
        0x45, 0x728, 0x46, 0x738,
        0x47, 0x748, 0x48, 0x758,
        0x49, 0x768, 0x4A, 0x778,
        0x4B, 0x784, 0x4C, 0x794,
        0x4D, 0x7A4, 0x4E, 0x7B4,
        0x4F, 0x7C4, 0x50, 0x7D0,
        0x51, 0x7DC, 0x52, 0x7E8,
        0x53, 0x7F8, 0x54, 0x808,
        0x55, 0x818, 0x56, 0x828,
        0x57, 0x838, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80010000, 0x900F000F, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000001, 0x900F0001,
        0x1F, 0x80000002, 0x900F0002, 0x1F,
        0x80000003, 0x900F0003, 0x1F, 0x80000004,
        0x900F0004, 0x1F, 0x8000000A, 0x900F0005,
        0x1F, 0x8001000A, 0x900F0006, 0x1F,
        0x80000005, 0x900F0007, 0x1F, 0x80010005,
        0x900F0008, 0x1F, 0x80020005, 0x900F0009,
        0x1, 0x800F0007, 0xA0E40000, 0x1,
        0x800F0005, 0xA0E40000, 0x1, 0x800F0004,
        0xA0E40000, 0x1, 0x800F0002, 0xA0E40000,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x1, 0xB0010000, 0x90000006, 0x9,
        0x80010000, 0x90E40000, 0xA0E42000, 0x9,
        0x80020000, 0x90E40000, 0xA0E42001, 0x9,
        0x80040000, 0x90E40000, 0xA0E42002, 0x8,
        0x80010001, 0x90E40005, 0xA0E42000, 0x8,
        0x80020001, 0x90E40005, 0xA0E42001, 0x8,
        0x80040001, 0x90E40005, 0xA0E42002, 0x1,
        0xB0010000, 0x90550006, 0x9, 0x80010004,
        0x90E40001, 0xA0E42000, 0x9, 0x80020004,
        0x90E40001, 0xA0E42001, 0x9, 0x80040004,
        0x90E40001, 0xA0E42002, 0x8, 0x80010005,
        0x90E40005, 0xA0E42000, 0x8, 0x80020005,
        0x90E40005, 0xA0E42001, 0x8, 0x80040005,
        0x90E40005, 0xA0E42002, 0x5, 0x80070000,
        0x80A40000, 0x90000004, 0x5, 0x80070001,
        0x80A40001, 0x90000004, 0x5, 0x80070004,
        0x80A40004, 0x90550004, 0x5, 0x80070005,
        0x80A40005, 0x90550004, 0x2, 0x80070000,
        0x80A40000, 0x80A40004, 0x2, 0x80070001,
        0x80A40001, 0x80A40005, 0x1, 0xB0010000,
        0x90AA0006, 0x9, 0x80010004, 0x90E40002,
        0xA0E42000, 0x9, 0x80020004, 0x90E40002,
        0xA0E42001, 0x9, 0x80040004, 0x90E40002,
        0xA0E42002, 0x8, 0x80010005, 0x90E40005,
        0xA0E42000, 0x8, 0x80020005, 0x90E40005,
        0xA0E42001, 0x8, 0x80040005, 0x90E40005,
        0xA0E42002, 0x5, 0x80070004, 0x80A40004,
        0x90AA0004, 0x5, 0x80070005, 0x80A40005,
        0x90AA0004, 0x2, 0x80070000, 0x80A40000,
        0x80A40004, 0x2, 0x80070001, 0x80A40001,
        0x80A40005, 0x1, 0xB0010000, 0x90FF0006,
        0x9, 0x80010004, 0x90E40003, 0xA0E42000,
        0x9, 0x80020004, 0x90E40003, 0xA0E42001,
        0x9, 0x80040004, 0x90E40003, 0xA0E42002,
        0x8, 0x80010005, 0x90E40005, 0xA0E42000,
        0x8, 0x80020005, 0x90E40005, 0xA0E42001,
        0x8, 0x80040005, 0x90E40005, 0xA0E42002,
        0x5, 0x80070004, 0x80A40004, 0x90FF0004,
        0x5, 0x80070005, 0x80A40005, 0x90FF0004,
        0x2, 0x80070000, 0x80A40000, 0x80A40004,
        0x2, 0x80070007, 0x80A40001, 0x80A40005,
        0x1, 0x80080000, 0xA0550005, 0x8,
        0x80080007, 0x80E40007, 0x80E40007, 0x7,
        0x80080007, 0x80FF0007, 0x5, 0x800F0007,
        0x80E40007, 0x80FF0007, 0x9, 0xC0010000,
        0x80E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x80E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x80E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x80E40000, 0xA0E40003, 0x8, 0x80010002,
        0x80E40007, 0xA0E40004, 0x8, 0x80020002,
        0x80E40007, 0xA0E40014, 0x8, 0x80040002,
        0x80E40007, 0xA0E40016, 0x1, 0x80080002,
        0xA0E40007, 0xB, 0x800F0002, 0x80E40002,
        0xA0E40018, 0x9, 0x80010001, 0x80E40002,
        0xA0E40008, 0x9, 0x80020001, 0x80E40002,
        0xA0E40015, 0x9, 0x80040001, 0x80E40002,
        0xA0E40017, 0x1, 0x80080001, 0xA0FF0005,
        0x1, 0xD00F0000, 0x80E40001, 0x1,
        0xE00F0000, 0x90E40007, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80040000,
        0x80AA0000, 0xA0550005, 0x2, 0xC00F0001,
        0xA0550005, 0x81AA0000, 0xFFFF
    };

    const char NAME_VSKELBMP[] = "Vskelbmp";
    // Assets/vskelbmp.vs
    const DWORD FUNC_VSKELBMP[853]
    {
        0xFFFE0101, 0x140FFFE, 0x47554244, 0x28,
        0x4C8, 0x0, 0x1, 0x6C,
        0x8B, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x73765C73, 0x626C656B,
        0x762E706D, 0xABAB0073, 0x28, 0x2,
        0x508, 0x3, 0x514, 0x4,
        0x520, 0x5, 0x52C, 0x6,
        0x538, 0x7, 0x544, 0x8,
        0x550, 0x9, 0x55C, 0xA,
        0x568, 0xB, 0x574, 0xC,
        0x580, 0xD, 0x58C, 0xE,
        0x598, 0xF, 0x5A8, 0x10,
        0x5B8, 0x11, 0x5C8, 0x12,
        0x5D8, 0x13, 0x5E8, 0x14,
        0x5F8, 0x15, 0x608, 0x16,
        0x618, 0x17, 0x628, 0x18,
        0x638, 0x19, 0x648, 0x1A,
        0x658, 0x1B, 0x664, 0x1C,
        0x674, 0x1D, 0x684, 0x1E,
        0x694, 0x1F, 0x6A4, 0x20,
        0x6B4, 0x21, 0x6C4, 0x22,
        0x6D4, 0x23, 0x6E4, 0x24,
        0x6F4, 0x25, 0x704, 0x26,
        0x714, 0x27, 0x724, 0x28,
        0x734, 0x29, 0x744, 0x2A,
        0x754, 0x2B, 0x764, 0x2C,
        0x774, 0x2D, 0x784, 0x2E,
        0x794, 0x2F, 0x7A4, 0x30,
        0x7B4, 0x31, 0x7C4, 0x32,
        0x7D4, 0x33, 0x7E4, 0x34,
        0x7F0, 0x35, 0x800, 0x36,
        0x810, 0x37, 0x820, 0x38,
        0x830, 0x39, 0x840, 0x3A,
        0x850, 0x3B, 0x860, 0x3C,
        0x870, 0x3D, 0x880, 0x3E,
        0x890, 0x3F, 0x8A0, 0x40,
        0x8B0, 0x41, 0x8C0, 0x42,
        0x8D0, 0x43, 0x8E0, 0x44,
        0x8F0, 0x45, 0x900, 0x46,
        0x910, 0x47, 0x920, 0x48,
        0x930, 0x49, 0x93C, 0x4A,
        0x94C, 0x4B, 0x95C, 0x4C,
        0x96C, 0x4D, 0x97C, 0x4E,
        0x98C, 0x4F, 0x99C, 0x50,
        0x9AC, 0x51, 0x9BC, 0x52,
        0x9CC, 0x53, 0x9DC, 0x54,
        0x9EC, 0x55, 0x9FC, 0x56,
        0xA0C, 0x57, 0xA1C, 0x58,
        0xA2C, 0x59, 0xA3C, 0x5A,
        0xA4C, 0x5B, 0xA5C, 0x5C,
        0xA6C, 0x5D, 0xA7C, 0x5E,
        0xA88, 0x5F, 0xA98, 0x60,
        0xAA8, 0x61, 0xAB8, 0x62,
        0xAC8, 0x63, 0xAD8, 0x64,
        0xAE8, 0x65, 0xAF8, 0x66,
        0xB08, 0x67, 0xB18, 0x68,
        0xB28, 0x69, 0xB34, 0x6A,
        0xB40, 0x6B, 0xB50, 0x6C,
        0xB5C, 0x6D, 0xB6C, 0x6E,
        0xB7C, 0x6F, 0xB88, 0x70,
        0xB98, 0x71, 0xBA8, 0x72,
        0xBB4, 0x73, 0xBC4, 0x74,
        0xBD0, 0x75, 0xBE0, 0x76,
        0xBF4, 0x77, 0xC04, 0x78,
        0xC10, 0x79, 0xC20, 0x7A,
        0xC30, 0x7B, 0xC40, 0x7C,
        0xC50, 0x7D, 0xC60, 0x7E,
        0xC70, 0x7F, 0xC80, 0x80,
        0xC90, 0x81, 0xCA0, 0x82,
        0xCB0, 0x83, 0xCC0, 0x84,
        0xCCC, 0x85, 0xCD8, 0x86,
        0xCE8, 0x87, 0xCF8, 0x88,
        0xD04, 0x89, 0xD14, 0x8A,
        0xD24, 0x8B, 0xD34, 0x8C,
        0xD44, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80010000,
        0x900F000F, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000001, 0x900F0001, 0x1F,
        0x80000002, 0x900F0002, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000004, 0x900F0004,
        0x1F, 0x8000000A, 0x900F0005, 0x1F,
        0x8001000A, 0x900F0006, 0x1F, 0x80000005,
        0x900F0007, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80020005, 0x900F0009, 0x1,
        0xB0010000, 0x90000006, 0x9, 0x80010000,
        0x90E40000, 0xA0E42000, 0x9, 0x80020000,
        0x90E40000, 0xA0E42001, 0x9, 0x80040000,
        0x90E40000, 0xA0E42002, 0x8, 0x80010001,
        0x90E40005, 0xA0E42000, 0x8, 0x80020001,
        0x90E40005, 0xA0E42001, 0x8, 0x80040001,
        0x90E40005, 0xA0E42002, 0x8, 0x80010002,
        0x90E40008, 0xA0E42000, 0x8, 0x80020002,
        0x90E40008, 0xA0E42001, 0x8, 0x80040002,
        0x90E40008, 0xA0E42002, 0x8, 0x80010003,
        0x90E40009, 0xA0E42000, 0x8, 0x80020003,
        0x90E40009, 0xA0E42001, 0x8, 0x80040003,
        0x90E40009, 0xA0E42002, 0x1, 0xB0010000,
        0x90550006, 0x9, 0x80010004, 0x90E40001,
        0xA0E42000, 0x9, 0x80020004, 0x90E40001,
        0xA0E42001, 0x9, 0x80040004, 0x90E40001,
        0xA0E42002, 0x8, 0x80010005, 0x90E40005,
        0xA0E42000, 0x8, 0x80020005, 0x90E40005,
        0xA0E42001, 0x8, 0x80040005, 0x90E40005,
        0xA0E42002, 0x8, 0x80010006, 0x90E40008,
        0xA0E42000, 0x8, 0x80020006, 0x90E40008,
        0xA0E42001, 0x8, 0x80040006, 0x90E40008,
        0xA0E42002, 0x8, 0x80010007, 0x90E40009,
        0xA0E42000, 0x8, 0x80020007, 0x90E40009,
        0xA0E42001, 0x8, 0x80040007, 0x90E40009,
        0xA0E42002, 0x5, 0x80070000, 0x80A40000,
        0x90000004, 0x5, 0x80070001, 0x80A40001,
        0x90000004, 0x5, 0x80070002, 0x80A40002,
        0x90000004, 0x5, 0x80070003, 0x80A40003,
        0x90000004, 0x5, 0x80070004, 0x80A40004,
        0x90550004, 0x5, 0x80070005, 0x80A40005,
        0x90550004, 0x5, 0x80070006, 0x80A40006,
        0x90550004, 0x5, 0x80070007, 0x80A40007,
        0x90550004, 0x2, 0x80070000, 0x80A40000,
        0x80A40004, 0x2, 0x80070001, 0x80A40001,
        0x80A40005, 0x2, 0x80070002, 0x80A40002,
        0x80A40006, 0x2, 0x80070003, 0x80A40003,
        0x80A40007, 0x1, 0xB0010000, 0x90AA0006,
        0x9, 0x80010004, 0x90E40002, 0xA0E42000,
        0x9, 0x80020004, 0x90E40002, 0xA0E42001,
        0x9, 0x80040004, 0x90E40002, 0xA0E42002,
        0x8, 0x80010005, 0x90E40005, 0xA0E42000,
        0x8, 0x80020005, 0x90E40005, 0xA0E42001,
        0x8, 0x80040005, 0x90E40005, 0xA0E42002,
        0x8, 0x80010006, 0x90E40008, 0xA0E42000,
        0x8, 0x80020006, 0x90E40008, 0xA0E42001,
        0x8, 0x80040006, 0x90E40008, 0xA0E42002,
        0x8, 0x80010007, 0x90E40009, 0xA0E42000,
        0x8, 0x80020007, 0x90E40009, 0xA0E42001,
        0x8, 0x80040007, 0x90E40009, 0xA0E42002,
        0x5, 0x80070004, 0x80A40004, 0x90AA0004,
        0x5, 0x80070005, 0x80A40005, 0x90AA0004,
        0x5, 0x80070006, 0x80A40006, 0x90AA0004,
        0x5, 0x80070007, 0x80A40007, 0x90AA0004,
        0x2, 0x80070000, 0x80A40000, 0x80A40004,
        0x2, 0x80070001, 0x80A40001, 0x80A40005,
        0x2, 0x80070002, 0x80A40002, 0x80A40006,
        0x2, 0x80070003, 0x80A40003, 0x80A40007,
        0x1, 0xB0010000, 0x90FF0006, 0x9,
        0x80010004, 0x90E40003, 0xA0E42000, 0x9,
        0x80020004, 0x90E40003, 0xA0E42001, 0x9,
        0x80040004, 0x90E40003, 0xA0E42002, 0x8,
        0x80010005, 0x90E40005, 0xA0E42000, 0x8,
        0x80020005, 0x90E40005, 0xA0E42001, 0x8,
        0x80040005, 0x90E40005, 0xA0E42002, 0x8,
        0x80010006, 0x90E40008, 0xA0E42000, 0x8,
        0x80020006, 0x90E40008, 0xA0E42001, 0x8,
        0x80040006, 0x90E40008, 0xA0E42002, 0x8,
        0x80010007, 0x90E40009, 0xA0E42000, 0x8,
        0x80020007, 0x90E40009, 0xA0E42001, 0x8,
        0x80040007, 0x90E40009, 0xA0E42002, 0x5,
        0x80070004, 0x80A40004, 0x90FF0004, 0x5,
        0x80070005, 0x80A40005, 0x90FF0004, 0x5,
        0x80070006, 0x80A40006, 0x90FF0004, 0x5,
        0x80070007, 0x80A40007, 0x90FF0004, 0x2,
        0x80070000, 0x80A40000, 0x80A40004, 0x2,
        0x80070008, 0x80A40002, 0x80A40006, 0x2,
        0x80070009, 0x80A40003, 0x80A40007, 0x2,
        0x80070007, 0x80A40001, 0x80A40005, 0x1,
        0x80080000, 0xA0550005, 0x9, 0xC0010000,
        0x80E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x80E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x80E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x80E40000, 0xA0E40003, 0x9, 0x80040000,
        0x90E40000, 0xA0E40002, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80040000,
        0x80AA0000, 0xA0550005, 0x2, 0xC00F0001,
        0xA0550005, 0x81AA0000, 0x1, 0xE00F0000,
        0x90E40007, 0x1, 0xE00F0001, 0x90E40007,
        0x8, 0x80080007, 0x80E40007, 0x80E40007,
        0x7, 0x80080007, 0x80FF0007, 0x5,
        0x800F0007, 0x80E40007, 0x80FF0007, 0x8,
        0x80080008, 0x80E40008, 0x80E40008, 0x7,
        0x80080008, 0x80FF0008, 0x5, 0x800F0008,
        0x80E40008, 0x80FF0008, 0x8, 0x80080009,
        0x80E40009, 0x80E40009, 0x7, 0x80080009,
        0x80FF0009, 0x5, 0x800F0009, 0x80E40009,
        0x80FF0009, 0x1, 0x800F0001, 0x80E40009,
        0x5, 0x80070000, 0x80090008, 0x80520001,
        0x4, 0x80070000, 0x81520008, 0x80090001,
        0x80A40000, 0x8, 0x80080000, 0x80E40000,
        0x80E40000, 0x7, 0x80080000, 0x80FF0000,
        0x5, 0x800F0000, 0x80E40000, 0x80FF0000,
        0x8, 0x80010001, 0xA0E40004, 0x80E40008,
        0x8, 0x80020001, 0xA0E40004, 0x80E40009,
        0x8, 0x80040001, 0xA0E40004, 0x80E40000,
        0x8, 0x80010002, 0x80E40007, 0x80E40000,
        0xD, 0x80010003, 0x80000002, 0xA0000005,
        0x2, 0x80010003, 0x80000003, 0x80000003,
        0x2, 0x80010003, 0x80000003, 0xA1550005,
        0x5, 0x80040001, 0x80AA0001, 0x80000003,
        0x5, 0x800F0001, 0x80E40001, 0xA0AA0005,
        0x2, 0xD00F0000, 0x80E40001, 0xA0AA0005,
        0x1, 0xD0080000, 0xA0FF0005, 0x1,
        0x80010002, 0xA0000005, 0x8, 0x80020002,
        0x80E40007, 0xA0E40014, 0x8, 0x80040002,
        0x80E40007, 0xA0E40016, 0x1, 0x80080002,
        0xA0E40007, 0xB, 0x800F0002, 0x80E40002,
        0xA0E40018, 0x8, 0xD0010001, 0x80E40002,
        0xA0E40008, 0x8, 0xD0020001, 0x80E40002,
        0xA0E40015, 0x8, 0xD0040001, 0x80E40002,
        0xA0E40017, 0x1, 0xD0080001, 0xA0FF0005,
        0xFFFF
    };

    const char NAME_VSKELSPC[] = "Vskelspc";
    // Assets/vskelspc.vs
    const DWORD FUNC_VSKELSPC[852]
    {
        0xFFFE0101, 0x140FFFE, 0x47554244, 0x28,
        0x4C8, 0x0, 0x1, 0x6C,
        0x8B, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x73765C73, 0x736C656B,
        0x762E6370, 0xABAB0073, 0x28, 0x2,
        0x508, 0x3, 0x514, 0x4,
        0x520, 0x5, 0x52C, 0x6,
        0x538, 0x7, 0x544, 0x8,
        0x550, 0x9, 0x55C, 0xA,
        0x568, 0xB, 0x574, 0xC,
        0x580, 0xD, 0x58C, 0xE,
        0x598, 0xF, 0x5A8, 0x10,
        0x5B8, 0x11, 0x5C8, 0x12,
        0x5D8, 0x13, 0x5E8, 0x14,
        0x5F8, 0x15, 0x608, 0x16,
        0x618, 0x17, 0x628, 0x18,
        0x638, 0x19, 0x648, 0x1A,
        0x658, 0x1B, 0x664, 0x1C,
        0x674, 0x1D, 0x684, 0x1E,
        0x694, 0x1F, 0x6A4, 0x20,
        0x6B4, 0x21, 0x6C4, 0x22,
        0x6D4, 0x23, 0x6E4, 0x24,
        0x6F4, 0x25, 0x704, 0x26,
        0x714, 0x27, 0x724, 0x28,
        0x734, 0x29, 0x744, 0x2A,
        0x754, 0x2B, 0x764, 0x2C,
        0x774, 0x2D, 0x784, 0x2E,
        0x794, 0x2F, 0x7A4, 0x30,
        0x7B4, 0x31, 0x7C4, 0x32,
        0x7D4, 0x33, 0x7E4, 0x34,
        0x7F0, 0x35, 0x800, 0x36,
        0x810, 0x37, 0x820, 0x38,
        0x830, 0x39, 0x840, 0x3A,
        0x850, 0x3B, 0x860, 0x3C,
        0x870, 0x3D, 0x880, 0x3E,
        0x890, 0x3F, 0x8A0, 0x40,
        0x8B0, 0x41, 0x8C0, 0x42,
        0x8D0, 0x43, 0x8E0, 0x44,
        0x8F0, 0x45, 0x900, 0x46,
        0x910, 0x47, 0x920, 0x48,
        0x930, 0x49, 0x93C, 0x4A,
        0x94C, 0x4B, 0x95C, 0x4C,
        0x96C, 0x4D, 0x97C, 0x4E,
        0x98C, 0x4F, 0x99C, 0x50,
        0x9AC, 0x51, 0x9BC, 0x52,
        0x9CC, 0x53, 0x9DC, 0x54,
        0x9EC, 0x55, 0x9FC, 0x56,
        0xA0C, 0x57, 0xA1C, 0x58,
        0xA2C, 0x59, 0xA3C, 0x5A,
        0xA4C, 0x5B, 0xA5C, 0x5C,
        0xA6C, 0x5D, 0xA7C, 0x5E,
        0xA88, 0x5F, 0xA98, 0x60,
        0xAA8, 0x61, 0xAB8, 0x62,
        0xAC8, 0x63, 0xAD4, 0x64,
        0xAE0, 0x65, 0xAF0, 0x66,
        0xAFC, 0x67, 0xB0C, 0x68,
        0xB1C, 0x69, 0xB28, 0x6A,
        0xB38, 0x6B, 0xB48, 0x6C,
        0xB54, 0x6D, 0xB64, 0x6E,
        0xB74, 0x6F, 0xB84, 0x70,
        0xB90, 0x71, 0xBA0, 0x72,
        0xBB0, 0x73, 0xBC0, 0x74,
        0xBCC, 0x75, 0xBDC, 0x76,
        0xBEC, 0x77, 0xC00, 0x78,
        0xC10, 0x79, 0xC20, 0x7A,
        0xC30, 0x7B, 0xC40, 0x7C,
        0xC50, 0x7D, 0xC60, 0x7E,
        0xC70, 0x7F, 0xC80, 0x80,
        0xC94, 0x81, 0xCA0, 0x82,
        0xCB0, 0x83, 0xCC0, 0x84,
        0xCD0, 0x85, 0xCE0, 0x86,
        0xCF0, 0x87, 0xD00, 0x88,
        0xD10, 0x89, 0xD1C, 0x8A,
        0xD28, 0x8B, 0xD34, 0x8C,
        0xD40, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80010000,
        0x900F000F, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000001, 0x900F0001, 0x1F,
        0x80000002, 0x900F0002, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000004, 0x900F0004,
        0x1F, 0x8000000A, 0x900F0005, 0x1F,
        0x8001000A, 0x900F0006, 0x1F, 0x80000005,
        0x900F0007, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80020005, 0x900F0009, 0x1,
        0xB0010000, 0x90000006, 0x9, 0x80010000,
        0x90E40000, 0xA0E42000, 0x9, 0x80020000,
        0x90E40000, 0xA0E42001, 0x9, 0x80040000,
        0x90E40000, 0xA0E42002, 0x8, 0x80010001,
        0x90E40005, 0xA0E42000, 0x8, 0x80020001,
        0x90E40005, 0xA0E42001, 0x8, 0x80040001,
        0x90E40005, 0xA0E42002, 0x8, 0x80010002,
        0x90E40008, 0xA0E42000, 0x8, 0x80020002,
        0x90E40008, 0xA0E42001, 0x8, 0x80040002,
        0x90E40008, 0xA0E42002, 0x8, 0x80010003,
        0x90E40009, 0xA0E42000, 0x8, 0x80020003,
        0x90E40009, 0xA0E42001, 0x8, 0x80040003,
        0x90E40009, 0xA0E42002, 0x1, 0xB0010000,
        0x90550006, 0x9, 0x80010004, 0x90E40001,
        0xA0E42000, 0x9, 0x80020004, 0x90E40001,
        0xA0E42001, 0x9, 0x80040004, 0x90E40001,
        0xA0E42002, 0x8, 0x80010005, 0x90E40005,
        0xA0E42000, 0x8, 0x80020005, 0x90E40005,
        0xA0E42001, 0x8, 0x80040005, 0x90E40005,
        0xA0E42002, 0x8, 0x80010006, 0x90E40008,
        0xA0E42000, 0x8, 0x80020006, 0x90E40008,
        0xA0E42001, 0x8, 0x80040006, 0x90E40008,
        0xA0E42002, 0x8, 0x80010007, 0x90E40009,
        0xA0E42000, 0x8, 0x80020007, 0x90E40009,
        0xA0E42001, 0x8, 0x80040007, 0x90E40009,
        0xA0E42002, 0x5, 0x80070000, 0x80A40000,
        0x90000004, 0x5, 0x80070001, 0x80A40001,
        0x90000004, 0x5, 0x80070002, 0x80A40002,
        0x90000004, 0x5, 0x80070003, 0x80A40003,
        0x90000004, 0x5, 0x80070004, 0x80A40004,
        0x90550004, 0x5, 0x80070005, 0x80A40005,
        0x90550004, 0x5, 0x80070006, 0x80A40006,
        0x90550004, 0x5, 0x80070007, 0x80A40007,
        0x90550004, 0x2, 0x80070000, 0x80A40000,
        0x80A40004, 0x2, 0x80070001, 0x80A40001,
        0x80A40005, 0x2, 0x80070002, 0x80A40002,
        0x80A40006, 0x2, 0x80070003, 0x80A40003,
        0x80A40007, 0x1, 0xB0010000, 0x90AA0006,
        0x9, 0x80010004, 0x90E40002, 0xA0E42000,
        0x9, 0x80020004, 0x90E40002, 0xA0E42001,
        0x9, 0x80040004, 0x90E40002, 0xA0E42002,
        0x8, 0x80010005, 0x90E40005, 0xA0E42000,
        0x8, 0x80020005, 0x90E40005, 0xA0E42001,
        0x8, 0x80040005, 0x90E40005, 0xA0E42002,
        0x8, 0x80010006, 0x90E40008, 0xA0E42000,
        0x8, 0x80020006, 0x90E40008, 0xA0E42001,
        0x8, 0x80040006, 0x90E40008, 0xA0E42002,
        0x8, 0x80010007, 0x90E40009, 0xA0E42000,
        0x8, 0x80020007, 0x90E40009, 0xA0E42001,
        0x8, 0x80040007, 0x90E40009, 0xA0E42002,
        0x5, 0x80070004, 0x80A40004, 0x90AA0004,
        0x5, 0x80070005, 0x80A40005, 0x90AA0004,
        0x5, 0x80070006, 0x80A40006, 0x90AA0004,
        0x5, 0x80070007, 0x80A40007, 0x90AA0004,
        0x2, 0x80070000, 0x80A40000, 0x80A40004,
        0x2, 0x80070001, 0x80A40001, 0x80A40005,
        0x2, 0x80070002, 0x80A40002, 0x80A40006,
        0x2, 0x80070003, 0x80A40003, 0x80A40007,
        0x1, 0xB0010000, 0x90FF0006, 0x9,
        0x80010004, 0x90E40003, 0xA0E42000, 0x9,
        0x80020004, 0x90E40003, 0xA0E42001, 0x9,
        0x80040004, 0x90E40003, 0xA0E42002, 0x8,
        0x80010005, 0x90E40005, 0xA0E42000, 0x8,
        0x80020005, 0x90E40005, 0xA0E42001, 0x8,
        0x80040005, 0x90E40005, 0xA0E42002, 0x8,
        0x80010006, 0x90E40008, 0xA0E42000, 0x8,
        0x80020006, 0x90E40008, 0xA0E42001, 0x8,
        0x80040006, 0x90E40008, 0xA0E42002, 0x8,
        0x80010007, 0x90E40009, 0xA0E42000, 0x8,
        0x80020007, 0x90E40009, 0xA0E42001, 0x8,
        0x80040007, 0x90E40009, 0xA0E42002, 0x5,
        0x80070004, 0x80A40004, 0x90FF0004, 0x5,
        0x80070005, 0x80A40005, 0x90FF0004, 0x5,
        0x80070006, 0x80A40006, 0x90FF0004, 0x5,
        0x80070007, 0x80A40007, 0x90FF0004, 0x2,
        0x80070000, 0x80A40000, 0x80A40004, 0x2,
        0x80070008, 0x80A40002, 0x80A40006, 0x2,
        0x80070009, 0x80A40003, 0x80A40007, 0x2,
        0x80070007, 0x80A40001, 0x80A40005, 0x1,
        0x80080000, 0xA0550005, 0x9, 0xC0010000,
        0x80E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x80E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x80E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x80E40000, 0xA0E40003, 0x1, 0xE00F0000,
        0x90E40007, 0x1, 0xE00F0001, 0x90E40007,
        0x8, 0x80080007, 0x80E40007, 0x80E40007,
        0x7, 0x80080007, 0x80FF0007, 0x5,
        0x800F0007, 0x80E40007, 0x80FF0007, 0x8,
        0x80080008, 0x80E40008, 0x80E40008, 0x7,
        0x80080008, 0x80FF0008, 0x5, 0x800F0008,
        0x80E40008, 0x80FF0008, 0x8, 0x80080009,
        0x80E40009, 0x80E40009, 0x7, 0x80080009,
        0x80FF0009, 0x5, 0x800F0009, 0x80E40009,
        0x80FF0009, 0x2, 0x800F0001, 0xA0E40009,
        0x81E40000, 0x8, 0x80080001, 0x80E40001,
        0x80E40001, 0x7, 0x80080001, 0x80FF0001,
        0x5, 0x800F0001, 0x80E40001, 0x80FF0001,
        0x2, 0x800F0002, 0xA0E40004, 0x80E40001,
        0x8, 0x80080002, 0x80E40002, 0x80E40002,
        0x7, 0x80080002, 0x80FF0002, 0x5,
        0x800F0002, 0x80E40002, 0x80FF0002, 0x5,
        0x80070000, 0x80090008, 0x80520009, 0x4,
        0x80070000, 0x81520008, 0x80090009, 0x80A40000,
        0x8, 0x80010001, 0x80E40002, 0x80E40008,
        0x8, 0x80020001, 0x80E40002, 0x80E40009,
        0x8, 0x80040001, 0x80E40002, 0x80E40000,
        0x8, 0x80010002, 0x80E40007, 0x80E40000,
        0xD, 0x80010003, 0x80000002, 0xA0000005,
        0x2, 0x80010003, 0x80000003, 0x80000003,
        0x2, 0x80010003, 0x80000003, 0xA1550005,
        0x5, 0x80040001, 0x80AA0001, 0x80000003,
        0x4, 0xD0070000, 0x80E40001, 0xA0AA0005,
        0xA0AA0005, 0x1, 0xD0080000, 0xA0550005,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80080000, 0x80AA0000, 0xA0550005,
        0x2, 0x80080000, 0xA0550005, 0x81FF0000,
        0x5, 0xD0080000, 0x80FF0000, 0xA0FF0005,
        0x1, 0xC00F0001, 0xA0550005, 0x1,
        0xD0010001, 0xA0000008, 0x1, 0xD0020001,
        0xA0000015, 0x1, 0xD0040001, 0xA0000017,
        0x1, 0xD0080001, 0xA0FF0005, 0xFFFF
    };

    const char NAME_VSKELSPC2[] = "Vskelsp2";
    // Assets/vskelsp2.vs
    const DWORD FUNC_VSKELSPC2[852]
    {
        0xFFFE0101, 0x140FFFE, 0x47554244, 0x28,
        0x4C8, 0x0, 0x1, 0x6C,
        0x8B, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x73765C73, 0x736C656B,
        0x762E3270, 0xABAB0073, 0x28, 0x2,
        0x508, 0x3, 0x514, 0x4,
        0x520, 0x5, 0x52C, 0x6,
        0x538, 0x7, 0x544, 0x8,
        0x550, 0x9, 0x55C, 0xA,
        0x568, 0xB, 0x574, 0xC,
        0x580, 0xD, 0x58C, 0xE,
        0x598, 0xF, 0x5A8, 0x10,
        0x5B8, 0x11, 0x5C8, 0x12,
        0x5D8, 0x13, 0x5E8, 0x14,
        0x5F8, 0x15, 0x608, 0x16,
        0x618, 0x17, 0x628, 0x18,
        0x638, 0x19, 0x648, 0x1A,
        0x658, 0x1B, 0x664, 0x1C,
        0x674, 0x1D, 0x684, 0x1E,
        0x694, 0x1F, 0x6A4, 0x20,
        0x6B4, 0x21, 0x6C4, 0x22,
        0x6D4, 0x23, 0x6E4, 0x24,
        0x6F4, 0x25, 0x704, 0x26,
        0x714, 0x27, 0x724, 0x28,
        0x734, 0x29, 0x744, 0x2A,
        0x754, 0x2B, 0x764, 0x2C,
        0x774, 0x2D, 0x784, 0x2E,
        0x794, 0x2F, 0x7A4, 0x30,
        0x7B4, 0x31, 0x7C4, 0x32,
        0x7D4, 0x33, 0x7E4, 0x34,
        0x7F0, 0x35, 0x800, 0x36,
        0x810, 0x37, 0x820, 0x38,
        0x830, 0x39, 0x840, 0x3A,
        0x850, 0x3B, 0x860, 0x3C,
        0x870, 0x3D, 0x880, 0x3E,
        0x890, 0x3F, 0x8A0, 0x40,
        0x8B0, 0x41, 0x8C0, 0x42,
        0x8D0, 0x43, 0x8E0, 0x44,
        0x8F0, 0x45, 0x900, 0x46,
        0x910, 0x47, 0x920, 0x48,
        0x930, 0x49, 0x93C, 0x4A,
        0x94C, 0x4B, 0x95C, 0x4C,
        0x96C, 0x4D, 0x97C, 0x4E,
        0x98C, 0x4F, 0x99C, 0x50,
        0x9AC, 0x51, 0x9BC, 0x52,
        0x9CC, 0x53, 0x9DC, 0x54,
        0x9EC, 0x55, 0x9FC, 0x56,
        0xA0C, 0x57, 0xA1C, 0x58,
        0xA2C, 0x59, 0xA3C, 0x5A,
        0xA4C, 0x5B, 0xA5C, 0x5C,
        0xA6C, 0x5D, 0xA7C, 0x5E,
        0xA88, 0x5F, 0xA98, 0x60,
        0xAA8, 0x61, 0xAB8, 0x62,
        0xAC8, 0x63, 0xAD4, 0x64,
        0xAE0, 0x65, 0xAF0, 0x66,
        0xAFC, 0x67, 0xB0C, 0x68,
        0xB1C, 0x69, 0xB28, 0x6A,
        0xB38, 0x6B, 0xB48, 0x6C,
        0xB54, 0x6D, 0xB64, 0x6E,
        0xB74, 0x6F, 0xB84, 0x70,
        0xB90, 0x71, 0xBA0, 0x72,
        0xBB0, 0x73, 0xBC0, 0x74,
        0xBCC, 0x75, 0xBDC, 0x76,
        0xBEC, 0x77, 0xC00, 0x78,
        0xC10, 0x79, 0xC20, 0x7A,
        0xC30, 0x7B, 0xC40, 0x7C,
        0xC50, 0x7D, 0xC60, 0x7E,
        0xC70, 0x7F, 0xC80, 0x80,
        0xC94, 0x81, 0xCA0, 0x82,
        0xCB0, 0x83, 0xCC0, 0x84,
        0xCD0, 0x85, 0xCE0, 0x86,
        0xCF0, 0x87, 0xD00, 0x88,
        0xD10, 0x89, 0xD1C, 0x8A,
        0xD28, 0x8B, 0xD34, 0x8C,
        0xD40, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80010000,
        0x900F000F, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000001, 0x900F0001, 0x1F,
        0x80000002, 0x900F0002, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000004, 0x900F0004,
        0x1F, 0x8000000A, 0x900F0005, 0x1F,
        0x8001000A, 0x900F0006, 0x1F, 0x80000005,
        0x900F0007, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80020005, 0x900F0009, 0x1,
        0xB0010000, 0x90000006, 0x9, 0x80010000,
        0x90E40000, 0xA0E42000, 0x9, 0x80020000,
        0x90E40000, 0xA0E42001, 0x9, 0x80040000,
        0x90E40000, 0xA0E42002, 0x8, 0x80010001,
        0x90E40005, 0xA0E42000, 0x8, 0x80020001,
        0x90E40005, 0xA0E42001, 0x8, 0x80040001,
        0x90E40005, 0xA0E42002, 0x8, 0x80010002,
        0x90E40008, 0xA0E42000, 0x8, 0x80020002,
        0x90E40008, 0xA0E42001, 0x8, 0x80040002,
        0x90E40008, 0xA0E42002, 0x8, 0x80010003,
        0x90E40009, 0xA0E42000, 0x8, 0x80020003,
        0x90E40009, 0xA0E42001, 0x8, 0x80040003,
        0x90E40009, 0xA0E42002, 0x1, 0xB0010000,
        0x90550006, 0x9, 0x80010004, 0x90E40001,
        0xA0E42000, 0x9, 0x80020004, 0x90E40001,
        0xA0E42001, 0x9, 0x80040004, 0x90E40001,
        0xA0E42002, 0x8, 0x80010005, 0x90E40005,
        0xA0E42000, 0x8, 0x80020005, 0x90E40005,
        0xA0E42001, 0x8, 0x80040005, 0x90E40005,
        0xA0E42002, 0x8, 0x80010006, 0x90E40008,
        0xA0E42000, 0x8, 0x80020006, 0x90E40008,
        0xA0E42001, 0x8, 0x80040006, 0x90E40008,
        0xA0E42002, 0x8, 0x80010007, 0x90E40009,
        0xA0E42000, 0x8, 0x80020007, 0x90E40009,
        0xA0E42001, 0x8, 0x80040007, 0x90E40009,
        0xA0E42002, 0x5, 0x80070000, 0x80A40000,
        0x90000004, 0x5, 0x80070001, 0x80A40001,
        0x90000004, 0x5, 0x80070002, 0x80A40002,
        0x90000004, 0x5, 0x80070003, 0x80A40003,
        0x90000004, 0x5, 0x80070004, 0x80A40004,
        0x90550004, 0x5, 0x80070005, 0x80A40005,
        0x90550004, 0x5, 0x80070006, 0x80A40006,
        0x90550004, 0x5, 0x80070007, 0x80A40007,
        0x90550004, 0x2, 0x80070000, 0x80A40000,
        0x80A40004, 0x2, 0x80070001, 0x80A40001,
        0x80A40005, 0x2, 0x80070002, 0x80A40002,
        0x80A40006, 0x2, 0x80070003, 0x80A40003,
        0x80A40007, 0x1, 0xB0010000, 0x90AA0006,
        0x9, 0x80010004, 0x90E40002, 0xA0E42000,
        0x9, 0x80020004, 0x90E40002, 0xA0E42001,
        0x9, 0x80040004, 0x90E40002, 0xA0E42002,
        0x8, 0x80010005, 0x90E40005, 0xA0E42000,
        0x8, 0x80020005, 0x90E40005, 0xA0E42001,
        0x8, 0x80040005, 0x90E40005, 0xA0E42002,
        0x8, 0x80010006, 0x90E40008, 0xA0E42000,
        0x8, 0x80020006, 0x90E40008, 0xA0E42001,
        0x8, 0x80040006, 0x90E40008, 0xA0E42002,
        0x8, 0x80010007, 0x90E40009, 0xA0E42000,
        0x8, 0x80020007, 0x90E40009, 0xA0E42001,
        0x8, 0x80040007, 0x90E40009, 0xA0E42002,
        0x5, 0x80070004, 0x80A40004, 0x90AA0004,
        0x5, 0x80070005, 0x80A40005, 0x90AA0004,
        0x5, 0x80070006, 0x80A40006, 0x90AA0004,
        0x5, 0x80070007, 0x80A40007, 0x90AA0004,
        0x2, 0x80070000, 0x80A40000, 0x80A40004,
        0x2, 0x80070001, 0x80A40001, 0x80A40005,
        0x2, 0x80070002, 0x80A40002, 0x80A40006,
        0x2, 0x80070003, 0x80A40003, 0x80A40007,
        0x1, 0xB0010000, 0x90FF0006, 0x9,
        0x80010004, 0x90E40003, 0xA0E42000, 0x9,
        0x80020004, 0x90E40003, 0xA0E42001, 0x9,
        0x80040004, 0x90E40003, 0xA0E42002, 0x8,
        0x80010005, 0x90E40005, 0xA0E42000, 0x8,
        0x80020005, 0x90E40005, 0xA0E42001, 0x8,
        0x80040005, 0x90E40005, 0xA0E42002, 0x8,
        0x80010006, 0x90E40008, 0xA0E42000, 0x8,
        0x80020006, 0x90E40008, 0xA0E42001, 0x8,
        0x80040006, 0x90E40008, 0xA0E42002, 0x8,
        0x80010007, 0x90E40009, 0xA0E42000, 0x8,
        0x80020007, 0x90E40009, 0xA0E42001, 0x8,
        0x80040007, 0x90E40009, 0xA0E42002, 0x5,
        0x80070004, 0x80A40004, 0x90FF0004, 0x5,
        0x80070005, 0x80A40005, 0x90FF0004, 0x5,
        0x80070006, 0x80A40006, 0x90FF0004, 0x5,
        0x80070007, 0x80A40007, 0x90FF0004, 0x2,
        0x80070000, 0x80A40000, 0x80A40004, 0x2,
        0x80070008, 0x80A40002, 0x80A40006, 0x2,
        0x80070009, 0x80A40003, 0x80A40007, 0x2,
        0x80070007, 0x80A40001, 0x80A40005, 0x1,
        0x80080000, 0xA0550005, 0x9, 0xC0010000,
        0x80E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x80E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x80E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x80E40000, 0xA0E40003, 0x1, 0xE00F0000,
        0x90E40007, 0x1, 0xE00F0001, 0x90E40007,
        0x8, 0x80080007, 0x80E40007, 0x80E40007,
        0x7, 0x80080007, 0x80FF0007, 0x5,
        0x800F0007, 0x80E40007, 0x80FF0007, 0x8,
        0x80080008, 0x80E40008, 0x80E40008, 0x7,
        0x80080008, 0x80FF0008, 0x5, 0x800F0008,
        0x80E40008, 0x80FF0008, 0x8, 0x80080009,
        0x80E40009, 0x80E40009, 0x7, 0x80080009,
        0x80FF0009, 0x5, 0x800F0009, 0x80E40009,
        0x80FF0009, 0x2, 0x800F0001, 0xA0E40009,
        0x81E40000, 0x8, 0x80080001, 0x80E40001,
        0x80E40001, 0x7, 0x80080001, 0x80FF0001,
        0x5, 0x800F0001, 0x80E40001, 0x80FF0001,
        0x2, 0x800F0002, 0xA0E40014, 0x80E40001,
        0x8, 0x80080002, 0x80E40002, 0x80E40002,
        0x7, 0x80080002, 0x80FF0002, 0x5,
        0x800F0002, 0x80E40002, 0x80FF0002, 0x5,
        0x80070000, 0x80090008, 0x80520009, 0x4,
        0x80070000, 0x81520008, 0x80090009, 0x80A40000,
        0x8, 0x80010001, 0x80E40002, 0x80E40008,
        0x8, 0x80020001, 0x80E40002, 0x80E40009,
        0x8, 0x80040001, 0x80E40002, 0x80E40000,
        0x8, 0x80010002, 0x80E40007, 0x80E40000,
        0xD, 0x80010003, 0x80000002, 0xA0000005,
        0x2, 0x80010003, 0x80000003, 0x80000003,
        0x2, 0x80010003, 0x80000003, 0xA1550005,
        0x5, 0x80040001, 0x80AA0001, 0x80000003,
        0x4, 0xD0070000, 0x80E40001, 0xA0AA0005,
        0xA0AA0005, 0x1, 0xD0080000, 0xA0550005,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80080000, 0x80AA0000, 0xA0550005,
        0x2, 0x80080000, 0xA0550005, 0x81FF0000,
        0x5, 0xD0080000, 0x80FF0000, 0xA0FF0005,
        0x1, 0xC00F0001, 0xA0550005, 0x1,
        0xD0010001, 0xA0550008, 0x1, 0xD0020001,
        0xA0550015, 0x1, 0xD0040001, 0xA0550017,
        0x1, 0xD0080001, 0xA0FF0005, 0xFFFF
    };

    const char NAME_VSKELSPC3[] = "Vskelsp3";
    // Assets/vskelsp3.vs
    const DWORD FUNC_VSKELSPC3[852]
    {
        0xFFFE0101, 0x140FFFE, 0x47554244, 0x28,
        0x4C8, 0x0, 0x1, 0x6C,
        0x8B, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x73765C73, 0x736C656B,
        0x762E3370, 0xABAB0073, 0x28, 0x2,
        0x508, 0x3, 0x514, 0x4,
        0x520, 0x5, 0x52C, 0x6,
        0x538, 0x7, 0x544, 0x8,
        0x550, 0x9, 0x55C, 0xA,
        0x568, 0xB, 0x574, 0xC,
        0x580, 0xD, 0x58C, 0xE,
        0x598, 0xF, 0x5A8, 0x10,
        0x5B8, 0x11, 0x5C8, 0x12,
        0x5D8, 0x13, 0x5E8, 0x14,
        0x5F8, 0x15, 0x608, 0x16,
        0x618, 0x17, 0x628, 0x18,
        0x638, 0x19, 0x648, 0x1A,
        0x658, 0x1B, 0x664, 0x1C,
        0x674, 0x1D, 0x684, 0x1E,
        0x694, 0x1F, 0x6A4, 0x20,
        0x6B4, 0x21, 0x6C4, 0x22,
        0x6D4, 0x23, 0x6E4, 0x24,
        0x6F4, 0x25, 0x704, 0x26,
        0x714, 0x27, 0x724, 0x28,
        0x734, 0x29, 0x744, 0x2A,
        0x754, 0x2B, 0x764, 0x2C,
        0x774, 0x2D, 0x784, 0x2E,
        0x794, 0x2F, 0x7A4, 0x30,
        0x7B4, 0x31, 0x7C4, 0x32,
        0x7D4, 0x33, 0x7E4, 0x34,
        0x7F0, 0x35, 0x800, 0x36,
        0x810, 0x37, 0x820, 0x38,
        0x830, 0x39, 0x840, 0x3A,
        0x850, 0x3B, 0x860, 0x3C,
        0x870, 0x3D, 0x880, 0x3E,
        0x890, 0x3F, 0x8A0, 0x40,
        0x8B0, 0x41, 0x8C0, 0x42,
        0x8D0, 0x43, 0x8E0, 0x44,
        0x8F0, 0x45, 0x900, 0x46,
        0x910, 0x47, 0x920, 0x48,
        0x930, 0x49, 0x93C, 0x4A,
        0x94C, 0x4B, 0x95C, 0x4C,
        0x96C, 0x4D, 0x97C, 0x4E,
        0x98C, 0x4F, 0x99C, 0x50,
        0x9AC, 0x51, 0x9BC, 0x52,
        0x9CC, 0x53, 0x9DC, 0x54,
        0x9EC, 0x55, 0x9FC, 0x56,
        0xA0C, 0x57, 0xA1C, 0x58,
        0xA2C, 0x59, 0xA3C, 0x5A,
        0xA4C, 0x5B, 0xA5C, 0x5C,
        0xA6C, 0x5D, 0xA7C, 0x5E,
        0xA88, 0x5F, 0xA98, 0x60,
        0xAA8, 0x61, 0xAB8, 0x62,
        0xAC8, 0x63, 0xAD4, 0x64,
        0xAE0, 0x65, 0xAF0, 0x66,
        0xAFC, 0x67, 0xB0C, 0x68,
        0xB1C, 0x69, 0xB28, 0x6A,
        0xB38, 0x6B, 0xB48, 0x6C,
        0xB54, 0x6D, 0xB64, 0x6E,
        0xB74, 0x6F, 0xB84, 0x70,
        0xB90, 0x71, 0xBA0, 0x72,
        0xBB0, 0x73, 0xBC0, 0x74,
        0xBCC, 0x75, 0xBDC, 0x76,
        0xBEC, 0x77, 0xC00, 0x78,
        0xC10, 0x79, 0xC20, 0x7A,
        0xC30, 0x7B, 0xC40, 0x7C,
        0xC50, 0x7D, 0xC60, 0x7E,
        0xC70, 0x7F, 0xC80, 0x80,
        0xC94, 0x81, 0xCA0, 0x82,
        0xCB0, 0x83, 0xCC0, 0x84,
        0xCD0, 0x85, 0xCE0, 0x86,
        0xCF0, 0x87, 0xD00, 0x88,
        0xD10, 0x89, 0xD1C, 0x8A,
        0xD28, 0x8B, 0xD34, 0x8C,
        0xD40, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80010000,
        0x900F000F, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000001, 0x900F0001, 0x1F,
        0x80000002, 0x900F0002, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000004, 0x900F0004,
        0x1F, 0x8000000A, 0x900F0005, 0x1F,
        0x8001000A, 0x900F0006, 0x1F, 0x80000005,
        0x900F0007, 0x1F, 0x80010005, 0x900F0008,
        0x1F, 0x80020005, 0x900F0009, 0x1,
        0xB0010000, 0x90000006, 0x9, 0x80010000,
        0x90E40000, 0xA0E42000, 0x9, 0x80020000,
        0x90E40000, 0xA0E42001, 0x9, 0x80040000,
        0x90E40000, 0xA0E42002, 0x8, 0x80010001,
        0x90E40005, 0xA0E42000, 0x8, 0x80020001,
        0x90E40005, 0xA0E42001, 0x8, 0x80040001,
        0x90E40005, 0xA0E42002, 0x8, 0x80010002,
        0x90E40008, 0xA0E42000, 0x8, 0x80020002,
        0x90E40008, 0xA0E42001, 0x8, 0x80040002,
        0x90E40008, 0xA0E42002, 0x8, 0x80010003,
        0x90E40009, 0xA0E42000, 0x8, 0x80020003,
        0x90E40009, 0xA0E42001, 0x8, 0x80040003,
        0x90E40009, 0xA0E42002, 0x1, 0xB0010000,
        0x90550006, 0x9, 0x80010004, 0x90E40001,
        0xA0E42000, 0x9, 0x80020004, 0x90E40001,
        0xA0E42001, 0x9, 0x80040004, 0x90E40001,
        0xA0E42002, 0x8, 0x80010005, 0x90E40005,
        0xA0E42000, 0x8, 0x80020005, 0x90E40005,
        0xA0E42001, 0x8, 0x80040005, 0x90E40005,
        0xA0E42002, 0x8, 0x80010006, 0x90E40008,
        0xA0E42000, 0x8, 0x80020006, 0x90E40008,
        0xA0E42001, 0x8, 0x80040006, 0x90E40008,
        0xA0E42002, 0x8, 0x80010007, 0x90E40009,
        0xA0E42000, 0x8, 0x80020007, 0x90E40009,
        0xA0E42001, 0x8, 0x80040007, 0x90E40009,
        0xA0E42002, 0x5, 0x80070000, 0x80A40000,
        0x90000004, 0x5, 0x80070001, 0x80A40001,
        0x90000004, 0x5, 0x80070002, 0x80A40002,
        0x90000004, 0x5, 0x80070003, 0x80A40003,
        0x90000004, 0x5, 0x80070004, 0x80A40004,
        0x90550004, 0x5, 0x80070005, 0x80A40005,
        0x90550004, 0x5, 0x80070006, 0x80A40006,
        0x90550004, 0x5, 0x80070007, 0x80A40007,
        0x90550004, 0x2, 0x80070000, 0x80A40000,
        0x80A40004, 0x2, 0x80070001, 0x80A40001,
        0x80A40005, 0x2, 0x80070002, 0x80A40002,
        0x80A40006, 0x2, 0x80070003, 0x80A40003,
        0x80A40007, 0x1, 0xB0010000, 0x90AA0006,
        0x9, 0x80010004, 0x90E40002, 0xA0E42000,
        0x9, 0x80020004, 0x90E40002, 0xA0E42001,
        0x9, 0x80040004, 0x90E40002, 0xA0E42002,
        0x8, 0x80010005, 0x90E40005, 0xA0E42000,
        0x8, 0x80020005, 0x90E40005, 0xA0E42001,
        0x8, 0x80040005, 0x90E40005, 0xA0E42002,
        0x8, 0x80010006, 0x90E40008, 0xA0E42000,
        0x8, 0x80020006, 0x90E40008, 0xA0E42001,
        0x8, 0x80040006, 0x90E40008, 0xA0E42002,
        0x8, 0x80010007, 0x90E40009, 0xA0E42000,
        0x8, 0x80020007, 0x90E40009, 0xA0E42001,
        0x8, 0x80040007, 0x90E40009, 0xA0E42002,
        0x5, 0x80070004, 0x80A40004, 0x90AA0004,
        0x5, 0x80070005, 0x80A40005, 0x90AA0004,
        0x5, 0x80070006, 0x80A40006, 0x90AA0004,
        0x5, 0x80070007, 0x80A40007, 0x90AA0004,
        0x2, 0x80070000, 0x80A40000, 0x80A40004,
        0x2, 0x80070001, 0x80A40001, 0x80A40005,
        0x2, 0x80070002, 0x80A40002, 0x80A40006,
        0x2, 0x80070003, 0x80A40003, 0x80A40007,
        0x1, 0xB0010000, 0x90FF0006, 0x9,
        0x80010004, 0x90E40003, 0xA0E42000, 0x9,
        0x80020004, 0x90E40003, 0xA0E42001, 0x9,
        0x80040004, 0x90E40003, 0xA0E42002, 0x8,
        0x80010005, 0x90E40005, 0xA0E42000, 0x8,
        0x80020005, 0x90E40005, 0xA0E42001, 0x8,
        0x80040005, 0x90E40005, 0xA0E42002, 0x8,
        0x80010006, 0x90E40008, 0xA0E42000, 0x8,
        0x80020006, 0x90E40008, 0xA0E42001, 0x8,
        0x80040006, 0x90E40008, 0xA0E42002, 0x8,
        0x80010007, 0x90E40009, 0xA0E42000, 0x8,
        0x80020007, 0x90E40009, 0xA0E42001, 0x8,
        0x80040007, 0x90E40009, 0xA0E42002, 0x5,
        0x80070004, 0x80A40004, 0x90FF0004, 0x5,
        0x80070005, 0x80A40005, 0x90FF0004, 0x5,
        0x80070006, 0x80A40006, 0x90FF0004, 0x5,
        0x80070007, 0x80A40007, 0x90FF0004, 0x2,
        0x80070000, 0x80A40000, 0x80A40004, 0x2,
        0x80070008, 0x80A40002, 0x80A40006, 0x2,
        0x80070009, 0x80A40003, 0x80A40007, 0x2,
        0x80070007, 0x80A40001, 0x80A40005, 0x1,
        0x80080000, 0xA0550005, 0x9, 0xC0010000,
        0x80E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x80E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x80E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x80E40000, 0xA0E40003, 0x1, 0xE00F0000,
        0x90E40007, 0x1, 0xE00F0001, 0x90E40007,
        0x8, 0x80080007, 0x80E40007, 0x80E40007,
        0x7, 0x80080007, 0x80FF0007, 0x5,
        0x800F0007, 0x80E40007, 0x80FF0007, 0x8,
        0x80080008, 0x80E40008, 0x80E40008, 0x7,
        0x80080008, 0x80FF0008, 0x5, 0x800F0008,
        0x80E40008, 0x80FF0008, 0x8, 0x80080009,
        0x80E40009, 0x80E40009, 0x7, 0x80080009,
        0x80FF0009, 0x5, 0x800F0009, 0x80E40009,
        0x80FF0009, 0x2, 0x800F0001, 0xA0E40009,
        0x81E40000, 0x8, 0x80080001, 0x80E40001,
        0x80E40001, 0x7, 0x80080001, 0x80FF0001,
        0x5, 0x800F0001, 0x80E40001, 0x80FF0001,
        0x2, 0x800F0002, 0xA0E40016, 0x80E40001,
        0x8, 0x80080002, 0x80E40002, 0x80E40002,
        0x7, 0x80080002, 0x80FF0002, 0x5,
        0x800F0002, 0x80E40002, 0x80FF0002, 0x5,
        0x80070000, 0x80090008, 0x80520009, 0x4,
        0x80070000, 0x81520008, 0x80090009, 0x80A40000,
        0x8, 0x80010001, 0x80E40002, 0x80E40008,
        0x8, 0x80020001, 0x80E40002, 0x80E40009,
        0x8, 0x80040001, 0x80E40002, 0x80E40000,
        0x8, 0x80010002, 0x80E40007, 0x80E40000,
        0xD, 0x80010003, 0x80000002, 0xA0000005,
        0x2, 0x80010003, 0x80000003, 0x80000003,
        0x2, 0x80010003, 0x80000003, 0xA1550005,
        0x5, 0x80040001, 0x80AA0001, 0x80000003,
        0x4, 0xD0070000, 0x80E40001, 0xA0AA0005,
        0xA0AA0005, 0x1, 0xD0080000, 0xA0550005,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80080000, 0x80AA0000, 0xA0550005,
        0x2, 0x80080000, 0xA0550005, 0x81FF0000,
        0x5, 0xD0080000, 0x80FF0000, 0xA0FF0005,
        0x1, 0xC00F0001, 0xA0550005, 0x1,
        0xD0010001, 0xA0AA0008, 0x1, 0xD0020001,
        0xA0AA0015, 0x1, 0xD0040001, 0xA0AA0017,
        0x1, 0xD0080001, 0xA0FF0005, 0xFFFF
    };

    const char NAME_VSKELTEX[] = "Vskeltex";
    // Assets/vskeltex.vs
    const DWORD FUNC_VSKELTEX[564]
    {
        0xFFFE0101, 0xE2FFFE, 0x47554244, 0x28,
        0x350, 0x0, 0x1, 0x6C,
        0x5C, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x73765C73, 0x746C656B,
        0x762E7865, 0xABAB0073, 0x28, 0x2,
        0x390, 0x3, 0x39C, 0x4,
        0x3A8, 0x5, 0x3B4, 0x6,
        0x3C0, 0x7, 0x3CC, 0x8,
        0x3D8, 0x9, 0x3E4, 0xA,
        0x3F0, 0xB, 0x3FC, 0xC,
        0x408, 0xD, 0x414, 0xE,
        0x420, 0xF, 0x42C, 0x10,
        0x438, 0x11, 0x444, 0x12,
        0x450, 0x13, 0x45C, 0x14,
        0x468, 0x15, 0x474, 0x16,
        0x480, 0x17, 0x48C, 0x18,
        0x498, 0x19, 0x4A4, 0x1A,
        0x4B4, 0x1B, 0x4C4, 0x1C,
        0x4D4, 0x1D, 0x4E4, 0x1E,
        0x4F4, 0x1F, 0x504, 0x20,
        0x510, 0x21, 0x520, 0x22,
        0x530, 0x23, 0x540, 0x24,
        0x550, 0x25, 0x560, 0x26,
        0x570, 0x27, 0x57C, 0x28,
        0x58C, 0x29, 0x59C, 0x2A,
        0x5AC, 0x2B, 0x5BC, 0x2C,
        0x5CC, 0x2D, 0x5DC, 0x2E,
        0x5E8, 0x2F, 0x5F8, 0x30,
        0x608, 0x31, 0x618, 0x32,
        0x628, 0x33, 0x638, 0x34,
        0x648, 0x35, 0x658, 0x36,
        0x668, 0x37, 0x678, 0x38,
        0x688, 0x39, 0x698, 0x3A,
        0x6A8, 0x3B, 0x6B8, 0x3C,
        0x6C8, 0x3D, 0x6D8, 0x3E,
        0x6E8, 0x3F, 0x6F8, 0x40,
        0x704, 0x41, 0x714, 0x42,
        0x724, 0x43, 0x734, 0x44,
        0x744, 0x45, 0x754, 0x46,
        0x764, 0x47, 0x774, 0x48,
        0x784, 0x49, 0x794, 0x4A,
        0x7A4, 0x4B, 0x7B0, 0x4C,
        0x7C0, 0x4D, 0x7D0, 0x4E,
        0x7E0, 0x4F, 0x7F0, 0x50,
        0x7FC, 0x51, 0x808, 0x52,
        0x818, 0x53, 0x828, 0x54,
        0x838, 0x55, 0x848, 0x56,
        0x854, 0x57, 0x860, 0x58,
        0x86C, 0x59, 0x87C, 0x5A,
        0x88C, 0x5B, 0x89C, 0x5C,
        0x8AC, 0x5D, 0x8BC, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80010000, 0x900F000F, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000001,
        0x900F0001, 0x1F, 0x80000002, 0x900F0002,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000004, 0x900F0004, 0x1F, 0x8000000A,
        0x900F0005, 0x1F, 0x8001000A, 0x900F0006,
        0x1F, 0x80000005, 0x900F0007, 0x1F,
        0x80010005, 0x900F0008, 0x1F, 0x80020005,
        0x900F0009, 0x1, 0x800F0007, 0xA0E40000,
        0x1, 0x800F0006, 0xA0E40000, 0x1,
        0x800F0005, 0xA0E40000, 0x1, 0x800F0004,
        0xA0E40000, 0x1, 0x800F0003, 0xA0E40000,
        0x1, 0x800F0002, 0xA0E40000, 0x1,
        0x800F0001, 0xA0E40000, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0000, 0xA0E40000,
        0x1, 0xE00F0001, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x1, 0xB0010000,
        0x90000006, 0x9, 0x80010000, 0x90E40000,
        0xA0E42000, 0x9, 0x80020000, 0x90E40000,
        0xA0E42001, 0x9, 0x80040000, 0x90E40000,
        0xA0E42002, 0x8, 0x80010004, 0x90E40005,
        0xA0E42000, 0x8, 0x80020004, 0x90E40005,
        0xA0E42001, 0x8, 0x80040004, 0x90E40005,
        0xA0E42002, 0x1, 0xB0010000, 0x90550006,
        0x9, 0x80010001, 0x90E40001, 0xA0E42000,
        0x9, 0x80020001, 0x90E40001, 0xA0E42001,
        0x9, 0x80040001, 0x90E40001, 0xA0E42002,
        0x8, 0x80010005, 0x90E40005, 0xA0E42000,
        0x8, 0x80020005, 0x90E40005, 0xA0E42001,
        0x8, 0x80040005, 0x90E40005, 0xA0E42002,
        0x1, 0xB0010000, 0x90AA0006, 0x9,
        0x80010002, 0x90E40002, 0xA0E42000, 0x9,
        0x80020002, 0x90E40002, 0xA0E42001, 0x9,
        0x80040002, 0x90E40002, 0xA0E42002, 0x8,
        0x80010006, 0x90E40005, 0xA0E42000, 0x8,
        0x80020006, 0x90E40005, 0xA0E42001, 0x8,
        0x80040006, 0x90E40005, 0xA0E42002, 0x1,
        0xB0010000, 0x90FF0006, 0x9, 0x80010003,
        0x90E40003, 0xA0E42000, 0x9, 0x80020003,
        0x90E40003, 0xA0E42001, 0x9, 0x80040003,
        0x90E40003, 0xA0E42002, 0x8, 0x80010007,
        0x90E40005, 0xA0E42000, 0x8, 0x80020007,
        0x90E40005, 0xA0E42001, 0x8, 0x80040007,
        0x90E40005, 0xA0E42002, 0x5, 0x80070000,
        0x80A40000, 0x90000004, 0x5, 0x80070001,
        0x80A40001, 0x90550004, 0x5, 0x80070002,
        0x80A40002, 0x90AA0004, 0x5, 0x80070003,
        0x80A40003, 0x90FF0004, 0x5, 0x80070004,
        0x80A40004, 0x90000004, 0x5, 0x80070005,
        0x80A40005, 0x90550004, 0x5, 0x80070006,
        0x80A40006, 0x90AA0004, 0x5, 0x80070007,
        0x80A40007, 0x90FF0004, 0x2, 0x80070000,
        0x80A40000, 0x80A40001, 0x2, 0x80070000,
        0x80A40000, 0x80A40002, 0x2, 0x80070000,
        0x80A40000, 0x80A40003, 0x1, 0x80080000,
        0xA0550005, 0x2, 0x80070004, 0x80A40004,
        0x80A40005, 0x2, 0x80070004, 0x80A40004,
        0x80A40006, 0x2, 0x80070004, 0x80A40004,
        0x80A40007, 0x9, 0xC0010000, 0x80E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x80E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x80E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x80E40000,
        0xA0E40003, 0x8, 0x80010002, 0x80E40004,
        0xA0E40004, 0x8, 0x80020002, 0x80E40004,
        0xA0E40014, 0x8, 0x80040002, 0x80E40004,
        0xA0E40016, 0x1, 0x80080002, 0xA0E40007,
        0xB, 0x800F0002, 0x80E40002, 0xA0E40018,
        0x9, 0x80010001, 0x80E40002, 0xA0E40008,
        0x9, 0x80020001, 0x80E40002, 0xA0E40015,
        0x9, 0x80040001, 0x80E40002, 0xA0E40017,
        0x1, 0x80080001, 0xA0FF0005, 0x1,
        0xD00F0000, 0x80E40001, 0x9, 0x80010000,
        0x90E40000, 0xA0E4000F, 0x9, 0x80020000,
        0x90E40000, 0xA0E40010, 0x9, 0x80040000,
        0x90E40000, 0xA0E40011, 0x9, 0x80080000,
        0x90E40000, 0xA0E40012, 0x1, 0x800F0001,
        0x80E40000, 0x1, 0xE00F0000, 0x80E40001,
        0x1, 0xE00F0001, 0x80E40001, 0x9,
        0x80040000, 0x90E40000, 0xA0E40002, 0x2,
        0x80040000, 0x80AA0000, 0xA1000006, 0x5,
        0x80040000, 0x80AA0000, 0xA0550006, 0xB,
        0x80040000, 0x80AA0000, 0xA0000005, 0xA,
        0x80040000, 0x80AA0000, 0xA0550005, 0x2,
        0xC00F0001, 0xA0550005, 0x81AA0000, 0xFFFF
    };

    const char NAME_VSPECMAP[] = "Vspecmap";
    // Assets/vspecmap.vs
    const DWORD FUNC_VSPECMAP[268]
    {
        0xFFFE0101, 0x78FFFE, 0x47554244, 0x28,
        0x1A8, 0x0, 0x1, 0x6C,
        0x27, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x73765C73, 0x6D636570,
        0x762E7061, 0xABAB0073, 0x28, 0x2,
        0x1E8, 0x3, 0x1F4, 0x4,
        0x200, 0x5, 0x20C, 0x6,
        0x218, 0x7, 0x224, 0x8,
        0x230, 0x9, 0x23C, 0xA,
        0x24C, 0xB, 0x25C, 0xC,
        0x26C, 0xD, 0x27C, 0xE,
        0x28C, 0xF, 0x29C, 0x10,
        0x2A8, 0x11, 0x2B8, 0x12,
        0x2C8, 0x13, 0x2D8, 0x14,
        0x2E4, 0x15, 0x2F4, 0x16,
        0x304, 0x17, 0x314, 0x18,
        0x324, 0x19, 0x334, 0x1A,
        0x344, 0x1B, 0x354, 0x1C,
        0x364, 0x1D, 0x374, 0x1E,
        0x384, 0x1F, 0x394, 0x20,
        0x3A4, 0x21, 0x3B0, 0x22,
        0x3C0, 0x23, 0x3D0, 0x24,
        0x3E0, 0x25, 0x3F0, 0x26,
        0x400, 0x27, 0x410, 0x28,
        0x420, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x1F, 0x80000000,
        0x900F0000, 0x1F, 0x80000003, 0x900F0003,
        0x1F, 0x80000005, 0x900F0007, 0x1,
        0x800F0008, 0xA0E40000, 0x1, 0x800F0000,
        0xA0E40000, 0x1, 0xD00F0000, 0xA0E40000,
        0x1, 0xE00F0000, 0xA0E40000, 0x9,
        0xC0010000, 0x90E40000, 0xA0E40000, 0x9,
        0xC0020000, 0x90E40000, 0xA0E40001, 0x9,
        0xC0040000, 0x90E40000, 0xA0E40002, 0x9,
        0xC0080000, 0x90E40000, 0xA0E40003, 0x2,
        0x800F0008, 0x90E40000, 0xA1E40009, 0x8,
        0x80080008, 0x80E40008, 0x80E40008, 0x7,
        0x80080008, 0x80FF0008, 0x5, 0x800F0008,
        0x80E40008, 0x80FF0008, 0x2, 0x800F0008,
        0x80E40008, 0xA1E40004, 0x8, 0x80080008,
        0x80E40008, 0x80E40008, 0x7, 0x80080008,
        0x80FF0008, 0x5, 0x800F0008, 0x80E40008,
        0x80FF0008, 0x8, 0x80010008, 0x90E40003,
        0x80E40008, 0x5, 0x80010008, 0x80000008,
        0xA1550005, 0xB, 0x80010008, 0x80000008,
        0xA0E40018, 0x5, 0x80010008, 0x80000008,
        0x80000008, 0x5, 0x80010008, 0x80000008,
        0x80000008, 0x5, 0x80010008, 0x80000008,
        0x80000008, 0x5, 0x80010008, 0x80000008,
        0x80000008, 0x5, 0x80010008, 0x80000008,
        0x80000008, 0x5, 0xD0010000, 0x80000008,
        0xA0000008, 0x5, 0xD0020000, 0x80000008,
        0xA0000015, 0x5, 0xD0040000, 0x80000008,
        0xA0000017, 0x1, 0xE00F0000, 0x90E40007,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80080000, 0x80AA0000, 0xA0550005,
        0x2, 0x80080000, 0xA0550005, 0x81FF0000,
        0x5, 0xD0080000, 0x80FF0000, 0xA0FF0005,
        0x1, 0xC00F0001, 0xA0550005, 0xFFFF
    };
}

namespace DX::Shaders::Pixel
{
    const char NAME_BUMP[] = "Bump";
    // Assets/bump.ps
    const DWORD FUNC_BUMP[87]
    {
        0xFFFF0101, 0x39FFFE, 0x47554244, 0x28,
        0xAC, 0x0, 0x1, 0x68,
        0x8, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x75625C73, 0x702E706D,
        0xABAB0073, 0x28, 0x2, 0xEC,
        0x3, 0xF4, 0x4, 0xFC,
        0x5, 0x10C, 0x6, 0x11C,
        0x7, 0x12C, 0x8, 0x13C,
        0x9, 0x148, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x42,
        0xB00F0000, 0x42, 0xB00F0001, 0x8,
        0x801F0000, 0xB4E40000, 0x94E40000, 0x5,
        0x80070000, 0x80E40000, 0xA0E40001, 0x2,
        0x800F0000, 0x80E40000, 0xA0E40000, 0x2,
        0x80070000, 0x80E40000, 0x90E40001, 0x1,
        0x80080000, 0x90FF0000, 0x5, 0x800F0000,
        0x80E40000, 0xB0E40001, 0xFFFF
    };

    const char NAME_BUMPSPEC[] = "Bumpspec";
    // Assets/bumpspec.ps
    const DWORD FUNC_BUMPSPEC[100]
    {
        0xFFFF0101, 0x3EFFFE, 0x47554244, 0x28,
        0xC0, 0x0, 0x1, 0x6C,
        0xA, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x75625C73, 0x7073706D,
        0x702E6365, 0xABAB0073, 0x28, 0x2,
        0x100, 0x3, 0x108, 0x4,
        0x110, 0x5, 0x120, 0x6,
        0x130, 0x7, 0x140, 0x8,
        0x150, 0x9, 0x160, 0xA,
        0x16C, 0xB, 0x17C, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x42, 0xB00F0000, 0x42, 0xB00F0001,
        0x8, 0x80170000, 0xB4E40000, 0x94E40000,
        0x5, 0x80070000, 0x80E40000, 0x80E40000,
        0x5, 0x80070000, 0x80E40000, 0x80E40000,
        0x5, 0x80070000, 0x80E40000, 0x80E40000,
        0x5, 0x80070000, 0x80E40000, 0x80E40000,
        0x1, 0x80080000, 0x90FF0000, 0x5,
        0x800F0000, 0x80E40000, 0xB0E40001, 0x5,
        0x800F0000, 0x80E40000, 0x90E40001, 0xFFFF
    };

    const char NAME_DECAL[] = "Decal";
    // Assets/decal.ps
    const DWORD FUNC_DECAL[54]
    {
        0xFFFF0101, 0x2DFFFE, 0x47554244, 0x28,
        0x7C, 0x0, 0x1, 0x68,
        0x2, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x65645C73, 0x2E6C6163,
        0xAB007370, 0x28, 0x2, 0xBC,
        0x3, 0xC4, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x42,
        0xB00F0000, 0x5, 0x800F0000, 0xB0E40000,
        0x90E40000, 0xFFFF
    };

    const char NAME_DECALKIL[] = "Decalkil";
    // Assets/decalkill.ps
    const DWORD FUNC_DECALKIL[59]
    {
        0xFFFF0101, 0x30FFFE, 0x47554244, 0x28,
        0x88, 0x0, 0x1, 0x6C,
        0x3, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x65645C73, 0x6B6C6163,
        0x2E6C6C69, 0xAB007370, 0x28, 0x2,
        0xC8, 0x3, 0xD0, 0x4,
        0xD8, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x42, 0xB00F0000,
        0x41, 0xB00F0001, 0x5, 0x800F0000,
        0xB0E40000, 0x90E40000, 0xFFFF
    };

    const char NAME_PBMPCUBE[] = "Pbmpcube";
    // Assets/pbmpcube.ps
    const DWORD FUNC_PBMPCUBE[75]
    {
        0xFFFF0101, 0x36FFFE, 0x47554244, 0x28,
        0xA0, 0x0, 0x1, 0x6C,
        0x6, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62705C73, 0x7563706D,
        0x702E6562, 0xABAB0073, 0x28, 0x2,
        0xE0, 0x3, 0xE8, 0x4,
        0xF4, 0x5, 0x100, 0x6,
        0x10C, 0x7, 0x11C, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x42, 0xB00F0000, 0x49, 0xB00F0001,
        0xB4E40000, 0x49, 0xB00F0002, 0xB4E40000,
        0x4D, 0xB00F0003, 0xB4E40000, 0x5,
        0x80070000, 0xB0E40003, 0x90E40000, 0x1,
        0x80080000, 0x90E40000, 0xFFFF
    };

    const char NAME_PBMPSPLM[] = "Pbmpsplm";
    // Assets/pbmpsplm.ps
    const DWORD FUNC_PBMPSPLM[102]
    {
        0xFFFF0101, 0x40FFFE, 0x47554244, 0x28,
        0xC8, 0x0, 0x1, 0x6C,
        0xB, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x62705C73, 0x7073706D,
        0x702E6D6C, 0xABAB0073, 0x28, 0x2,
        0x108, 0x3, 0x110, 0x4,
        0x118, 0x5, 0x120, 0x6,
        0x128, 0x7, 0x138, 0x8,
        0x148, 0x9, 0x158, 0xA,
        0x168, 0xB, 0x174, 0xC,
        0x184, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x42, 0xB00F0000,
        0x42, 0xB00F0001, 0x42, 0xB00F0002,
        0x41, 0xB00F0003, 0x8, 0x80170000,
        0xB4E40000, 0x94E40000, 0x5, 0x80070000,
        0x80E40000, 0x80E40000, 0x5, 0x80070000,
        0x80E40000, 0x80E40000, 0x5, 0x80070000,
        0x80E40000, 0x80E40000, 0x1, 0x80080000,
        0x90FF0000, 0x5, 0x800F0000, 0x80E40000,
        0xB0E40001, 0x5, 0x800F0000, 0x80E40000,
        0xB0E40002, 0xFFFF
    };

    const char NAME_PGLOSS[] = "Pgloss";
    // Assets/pgloss.ps
    const DWORD FUNC_PGLOSS[67]
    {
        0xFFFF0101, 0x33FFFE, 0x47554244, 0x28,
        0x94, 0x0, 0x1, 0x68,
        0x5, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x67705C73, 0x73736F6C,
        0x73702E, 0x28, 0x2, 0xD4,
        0x3, 0xDC, 0x4, 0xE4,
        0x5, 0xEC, 0x6, 0xF8,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x42, 0xB00F0000, 0x42,
        0xB00F0001, 0x42, 0xB00F0002, 0x1,
        0x800F0000, 0xB0E40000, 0x5, 0x800F0000,
        0x80E40000, 0x90E40000, 0xFFFF
    };

    const char NAME_PLMAP[] = "Plmap";
    // Assets/plmap.ps
    const DWORD FUNC_PLMAP[63]
    {
        0xFFFF0101, 0x31FFFE, 0x47554244, 0x28,
        0x8C, 0x0, 0x1, 0x68,
        0x4, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6C705C73, 0x2E70616D,
        0xAB007370, 0x28, 0x2, 0xCC,
        0x3, 0xD4, 0x4, 0xDC,
        0x5, 0xEC, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x42,
        0xB00F0000, 0x42, 0xB00F0001, 0x5,
        0x800F0000, 0xB0E40000, 0xB0E40001, 0x1,
        0x80080000, 0x90FF0000, 0xFFFF
    };

    const char NAME_PLMBS[] = "Plmbs";
    // Assets/plmbs.ps
    const DWORD FUNC_PLMBS[109]
    {
        0xFFFF0101, 0x41FFFE, 0x47554244, 0x28,
        0xCC, 0x0, 0x1, 0x68,
        0xC, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x525C5449, 0x61526465,
        0x2D656E79, 0x656A6E49, 0x535C7463, 0x6372756F,
        0x2E525C65, 0x65726944, 0x2E587463, 0x2E302E39,
        0x415C4C54, 0x74657373, 0x6C705C73, 0x2E73626D,
        0xAB007370, 0x28, 0x2, 0x10C,
        0x3, 0x114, 0x4, 0x11C,
        0x5, 0x124, 0x6, 0x12C,
        0x7, 0x13C, 0x8, 0x14C,
        0x9, 0x15C, 0xA, 0x16C,
        0xB, 0x17C, 0xC, 0x18C,
        0xD, 0x19C, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x42,
        0xB00F0000, 0x42, 0xB00F0001, 0x42,
        0xB00F0002, 0x42, 0xB00F0003, 0x8,
        0x80170001, 0xB4E40000, 0x94E40000, 0x5,
        0x80070001, 0x80E40001, 0x80E40001, 0x5,
        0x80070001, 0x80E40001, 0x80E40001, 0x5,
        0x80070001, 0x80E40001, 0x80E40001, 0x5,
        0x80070001, 0x80E40001, 0x90FF0000, 0x5,
        0x80070001, 0x80E40001, 0xB0E40003, 0x5,
        0x800F0000, 0xB0E40002, 0xB0E40003, 0x4,
        0x80070000, 0x80E40001, 0xB0E40001, 0x80E40000,
        0xFFFF
    };
}